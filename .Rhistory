LE_d_f_final$LE_binary %>% enframe() %>% bind_cols(d_f_.FA$OBS.rotate)
LE_d_f_final$LE_binary %>% enframe() %>%  data_frame(bind_cols(d_f_.FA$OBS.rotate))
data_frame(bind_cols(d_f_.FA$OBS.rotate))
data_frame(bind_cols(d_f_.FA$OBS.rotate))
data_frame(d_f_.FA$OBS.rotate)
as.data.frame(d_f_.FA$OBS.rotate)
LE_d_f_final$LE_binary %>% enframe() %>%  bind_cols(as.data.frame(d_f_.FA$OBS.rotate))
LE_d_f_final$LE_binary %>% enframe() %>% as.factor()
LE_d_f_final$LE_binary %>% enframe()
LE_d_f_final$LE_binary %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))
LE_d_f_final$LE_binary
LE_d_f_final$LE_binary %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))
LE_d_f_final$LE_binary %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))
%>% rename(LE_binary=value,F1=V1, F2=V2) %>%
LE_d_f_final$LE_binary %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))
%>% rename(LE_binary=value,F1=V1, F2=V2) %>% mutate(LE_binary=as.factor(LE_binary))
LE_d_f_final$LE_binary %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))
%>% rename(LE_binary=value,F1=V1, F2=V2) %>% mutate(LE_binary=as.factor(.$LE_binary))
LE_d_f_final$LE_binary %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))
%>% rename(LE_binary=value,F1=V1, F2=V2) %>% mutate(LE_binary=as.factor(LE_binary))
LE_d_f_final$LE_binary %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))
%>% rename(LE_binary=value,F1=V1, F2=V2) %>% mutate(LE_binary=as.factor(LE_binary))
LE_d_f_final$LE_binary %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))%>% rename(LE_binary=value,F1=V1, F2=V2) %>% mutate(LE_binary=as.factor(LE_binary))
aaaa=LE_d_f_final$LE_binary %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))%>% rename(LE_binary=value,F1=V1, F2=V2) %>% mutate(LE_binary=as.factor(LE_binary))
glmmML(LE_binary ~ F1+F2, family =  "binomial", cluster=id, data=aaaa)
glmmML(LE_binary ~ F1+F2, family =  "binomial", cluster=name, data=aaaa)
glm(LE_d_f_final$LE_binary ~ d_f_.FA$OBS.rotate, family =  "binomial")
system("open .")
system("open .")
?glmmML
help(package = "glmmML")
id <- factor(rep(1:20, rep(5, 20)))
y <- rbinom(100, prob = rep(runif(20), rep(5, 20)), size = 1)
x <- rnorm(100)
dat <- data.frame(y = y, x = x, id = id)
dat
glmmML(y ~ x, data = dat, cluster = id)
library(glmmML)
glmmML(y ~ x, data = dat, cluster = id)
id <- factor(rep(1:20, rep(5, 20)))
y <- rbinom(100, prob = rep(runif(20), rep(5, 20)), size = 1)
x <- rnorm(100)
dat <- data.frame(y = y, x = x, id = id)
dat
install.packages("vctrs")
install.packages("vctrs")
## R code 4.37
library(rethinking)
data(Howell1); d <- Howell1; d2 <- d[ d$age >= 18 , ]
plot( d2$height ~ d2$weight )
## R code 4.38
set.seed(2971)
N <- 100                   # 100 lines
a <- rnorm( N , 178 , 20 )
b <- rnorm( N , 0 , 10 )
a
b
## R code 4.39
plot( NULL , xlim=range(d2$weight) , ylim=c(-100,400) ,
xlab="weight" , ylab="height" )
abline( h=0 , lty=2 )
abline( h=272 , lty=1 , lwd=0.5 )
mtext( "b ~ dnorm(0,10)" )
xbar <- mean(d2$weight)
for ( i in 1:N ) curve( a[i] + b[i]*(x - xbar) ,
from=min(d2$weight) , to=max(d2$weight) , add=TRUE ,
col=col.alpha("black",0.2) )
Howell1
d<-Howell1
d
suppressMessages(library(tidyverse))
d %>% tbl_df()
d %>% tbl_df()
d
d %>% tbl_df()
d %>% dim()
d %>% filter(age>=18)
d<-d %>% filter(age>=18)
d %>% dim()
alist(
d$height~dnorm(mu, sigma)
mu~beta0+beta1*d$weight,
beta0~dnorm(156, 100),
beta1~dnorm(0, 10),
sigma ~ dunif(0, 50)
)
alist(
d$height~dnorm(mu, sigma)
mu~beta0+beta1*d$weight,
beta0~dnorm(156, 100),
beta1~dnorm(0, 10),
sigma ~ dunif(0, 50)
)
alist(
d$height~dnorm(mu, sigma),
mu~beta0+beta1*d$weight,
beta0~dnorm(156, 100),
beta1~dnorm(0, 10),
sigma ~ dunif(0, 50)
)
map(alist(
d$height~dnorm(mu, sigma),
mu~beta0+beta1*d$weight,
beta0~dnorm(156, 100),
beta1~dnorm(0, 10),
sigma ~ dunif(0, 50)
)
)
m4.3<-map(alist(
height~dnorm(mu, sigma),
mu~beta0+beta1*weight,
beta0~dnorm(156, 100),
beta1~dnorm(0, 10),
sigma ~ dunif(0, 50)
), data=d
)
library(rethinking)
m4.3<-map(alist(
height~dnorm(mu, sigma),
mu~beta0+beta1*weight,
beta0~dnorm(156, 100),
beta1~dnorm(0, 10),
sigma ~ dunif(0, 50)
), data=d
)
m4.3<-
rethinking::(alist(
height~dnorm(mu, sigma),
mu~beta0+beta1*weight,
beta0~dnorm(156, 100),
beta1~dnorm(0, 10),
sigma ~ dunif(0, 50)
), data=d
)
m4.3<-
rethinking::map(alist(
height~dnorm(mu, sigma),
mu~beta0+beta1*weight,
beta0~dnorm(156, 100),
beta1~dnorm(0, 10),
sigma ~ dunif(0, 50)
), data=d
)
m4.3
m4.3 %>% fit()
m4.3 %>% summary()
precis(m4.3)
precis(m4.3, corr=T)
precis(m4.3, corr=T)
precis(m4.3, corr=T)
precis(m4.3, corr=T)
round( vcov( m4.3 ) , 3 )
m4.3
coef(m4.3["beta0"])
m4.3["beta0"]
coef(m4.3)
coef(m4.3)["beta0"]
coef(m4.3)["beta1"]
abline(coef(m4.3)["beta0"],
coef(m4.3)["beta1"]
)
abline(coef(m4.3)["beta0"],
coef(m4.3)["beta1"]
)
plot(d$height~d$weight)
abline(coef(m4.3)["beta0"],
coef(m4.3)["beta1"]
)
extract.samples(m4.3)
extract.samples(m4.3) %>% dim()
post<-extract.samples(m4.3)
post
post %>% dim()
post %>% tbl_df()
post %>% class()
post$beta0
post %>% class()
mu_at_50<-post$beta0 + post$beta1*50
mu_at_50
mu_at_50 %>% dim()
mu_at_50 %>% dim()
mu_at_50 %>% length()
dens(mu_at_50)
HPDI(mu_at_50)
link(m4.3)
link(m4.3)
link(m4.3) %>% class()
link(m4.3) %>% dim()
m4.3
link(m4.3) %>% dim()
link(m4.3)
# devtools::install_github(repo = "luka3117/JcPackage/OsakaUniv2020")
# 使用package
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(data.table))
suppressMessages(library(kableExtra))
suppressMessages(library(curl))
suppressMessages(library(tidyverse))
suppressMessages(library(plotly))
suppressMessages(library(ggrepel))
suppressMessages(library(magrittr))
load("../ScreenEnd.RData")
# -----------------
# Q1:Do the final regression and interprete : with 4 data
# -----------------
# ----------------- ----------------- ----------------- -----------------
#  _____ _             _   _     __  __
# |  ___(_)_ __   __ _| | | |   |  \/  |
# | |_  | | '_ \ / _` | | | |   | |\/| |
# |  _| | | | | | (_| | | | |___| |  | |
# |_|   |_|_| |_|\__,_|_| |_____|_|  |_|
# ----------------- ----------------- ----------------- -----------------
options(digits = 5)              # Modify global options
lm(LE_2015~. , data = LE_d_f_final) %>%
broom::tidy() %>%
left_join(var, by=c("term"="var_name_Eng")) %>%
select(term, var_name_Jpn, everything(), -id,- address, -std.error, -columm_letter ) %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'statistic', "p.value"), digits=3)
# -----------------
# Q1:Do the final regression and interprete : with 4 data
# -----------------
# ----------------- ----------------- ----------------- -----------------
#  _____ _             _   _     __  __
# |  ___(_)_ __   __ _| | | |   |  \/  |
# | |_  | | '_ \ / _` | | | |   | |\/| |
# |  _| | | | | | (_| | | | |___| |  | |
# |_|   |_|_| |_|\__,_|_| |_____|_|  |_|
# ----------------- ----------------- ----------------- -----------------
options(digits = 5)              # Modify global options
lm(HLE_2016~. , data = HLE_d_f_final) %>%
broom::tidy() %>%
left_join(var, by=c("term"="var_name_Eng")) %>%
select(term, var_name_Jpn, everything(), -id,- address, -std.error, -columm_letter ) %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'statistic', "p.value"), digits=3)
# -----------------
# Q1:Do the final regression and interprete : with 4 data
# -----------------
# ----------------- ----------------- ----------------- -----------------
#  _____ _             _   _     __  __
# |  ___(_)_ __   __ _| | | |   |  \/  |
# | |_  | | '_ \ / _` | | | |   | |\/| |
# |  _| | | | | | (_| | | | |___| |  | |
# |_|   |_|_| |_|\__,_|_| |_____|_|  |_|
# ----------------- ----------------- ----------------- -----------------
options(digits = 5)              # Modify global options
lm(LE_2015~. , data = LE_d_m_final) %>%
broom::tidy() %>%
left_join(var, by=c("term"="var_name_Eng")) %>%
select(term, var_name_Jpn, everything(), -id,- address, -std.error, -columm_letter ) %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'statistic', "p.value"), digits=3)
# -----------------
# Q1:Do the final regression and interprete : with 4 data
# -----------------
# ----------------- ----------------- ----------------- -----------------
#  _____ _             _   _     __  __
# |  ___(_)_ __   __ _| | | |   |  \/  |
# | |_  | | '_ \ / _` | | | |   | |\/| |
# |  _| | | | | | (_| | | | |___| |  | |
# |_|   |_|_| |_|\__,_|_| |_____|_|  |_|
# ----------------- ----------------- ----------------- -----------------
options(digits = 5)              # Modify global options
lm(HLE_2016~. , data = HLE_d_m_final) %>%
broom::tidy() %>%
left_join(var, by=c("term"="var_name_Eng")) %>%
select(term, var_name_Jpn, everything(), -id,- address, -std.error, -columm_letter ) %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'statistic', "p.value"), digits=3)
LE_d_f_final.reg<-lm(LE_2015~. , data = LE_d_f_final)
d_f_.FA<-LE_d_f_final.reg$model[,-1] %>% zemi::JcFA()
rownames(d_f_.FA$VAR.rotate)<-colnames(LE_d_f_final.reg$model[,-1] )
d_f_.FA$VAR.rotate %>% data.frame() %>% rownames_to_column() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
select(rowname,var_name_Jpn,X1,X2) %>% rename(F1=X1, F2=X2) %>%
DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
d_f_.FA$OBS.rotate %>% as.data.frame() %>% tbl_df() %>%
rename(F1=V1, F2=V2) %>%
mutate(pref.J=d_common$pref.J)%>% select(pref.J, everything()) %>%
DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
#
#
# aa$VAR[,c(1:3)] %>% round(2)
#
#
# plot(aa$OBS.rotate,
#   aa$VAR.rotate)
# DT::datatable()
# aa=zemi::JcFA(zemi::USCrime)
#
# X_f<-LE_d_f_final.reg$model[,-1]
# X_f %>% dim()
#
#
#
# aa$d
# aa=zemi::JcFA(LE_d_f_final[,-1])
#
# HLE_d_f_final %>% colnames()
# #
# # aa$d
# # aa$OBS
# # aa$VAR
#
LE_d_m_final.reg<-lm(LE_2015~. , data = LE_d_m_final)
d_m_.FA<-LE_d_m_final.reg$model[,-1] %>% zemi::JcFA()
rownames(d_m_.FA$VAR.rotate)<-colnames(LE_d_m_final.reg$model[,-1] )
d_m_.FA$VAR.rotate %>% data.frame() %>% rownames_to_column() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
select(rowname,var_name_Jpn,X1,X2) %>% rename(F1=X1, F2=X2) %>%
DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
d_m_.FA$OBS.rotate %>% as.data.frame() %>% tbl_df() %>%
rename(F1=V1, F2=V2) %>%
mutate(pref.J=d_common$pref.J)%>% select(pref.J, everything()) %>%
DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
lm(LE_d_f_final$LE_2015~d_f_.FA$OBS.rotate) %>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
lm(LE_d_f_final$LE_2015~d_f_.FA$OBS.rotate) %>% broom::glance()
lm(HLE_d_f_final$HLE_2016~d_f_.FA$OBS.rotate) %>% broom::tidy()%>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
lm(HLE_d_f_final$HLE_2016~d_f_.FA$OBS.rotate) %>% broom::glance()
lm(LE_d_m_final$LE_2015~d_m_.FA$OBS.rotate) %>% broom::tidy()%>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
lm(LE_d_m_final$LE_2015~d_m_.FA$OBS.rotate) %>% broom::glance()
lm(HLE_d_m_final$HLE_2016~d_m_.FA$OBS.rotate) %>% broom::tidy()%>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
lm(HLE_d_m_final$HLE_2016~d_m_.FA$OBS.rotate) %>% broom::glance()
LE_d_f_final$LE_binary <- ifelse(LE_d_f_final$LE_2015>median(LE_d_f_final$LE_2015),1,0)
HLE_d_f_final$HLE_binary <- ifelse(HLE_d_f_final$HLE_2016>median(HLE_d_f_final$HLE_2016),1,0)
LE_d_m_final$LE_binary <- ifelse(LE_d_m_final$LE_2015>median(LE_d_m_final$LE_2015),1,0)
HLE_d_m_final$HLE_binary <- ifelse(HLE_d_m_final$HLE_2016>median(HLE_d_m_final$HLE_2016),1,0)
LE_d_f_final$LE_binary   # 女性
HLE_d_f_final$HLE_binary   # 女性
LE_d_m_final$LE_binary   # 男性
HLE_d_m_final$HLE_binary   # 男性
glm(LE_d_f_final$LE_binary ~ d_f_.FA$OBS.rotate, family =  "binomial")%>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
glm(HLE_d_f_final$HLE_binary ~ d_f_.FA$OBS.rotate, family =  "binomial")%>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
glm(LE_d_m_final$LE_binary ~ d_m_.FA$OBS.rotate, family =  "binomial")%>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
glm(HLE_d_m_final$HLE_binary ~ d_m_.FA$OBS.rotate, family =  "binomial")%>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
LE_FF_d_f=LE_d_f_final$LE_2015 %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))%>%
rename(LE=value,F1=V1, F2=V2) %>% select(-name)
# mutate(LE=as.factor(LE_binary))
glm(LE~., family=Gamma(link="log"), data=LE_FF_d_f) %>%
broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
HLE_FF_d_f=HLE_d_f_final$HLE_2016 %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))%>%
rename(HLE=value,F1=V1, F2=V2) %>% select(-name)
# mutate(HLE=as.factor(HLE_binary))
glm(HLE~., family=Gamma(link="log"), data=HLE_FF_d_f) %>%
broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
LE_FF_d_m=LE_d_m_final$LE_2015 %>% enframe() %>%
bind_cols(as.data.frame(d_m_.FA$OBS.rotate))%>%
rename(LE=value,F1=V1, F2=V2) %>% select(-name)
# mutate(LE=as.factor(LE_binary))
glm(LE~., family=Gamma(link="log"), data=LE_FF_d_m) %>%
broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
HLE_FF_d_m=HLE_d_m_final$HLE_2016 %>% enframe() %>%
bind_cols(as.data.frame(d_m_.FA$OBS.rotate))%>%
rename(HLE=value,F1=V1, F2=V2) %>% select(-name)
# mutate(HLE=as.factor(HLE_binary))
glm(HLE~., family=Gamma(link="log"), data=HLE_FF_d_m) %>%
broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
ls()
ls()
ls(pattern = "LE")
ls(pattern = "FF")
LE_FF_d_f
library(rethinking)
Bayes_fit_LE_d_f<-
rethinking::map(alist(
LE~dnorm(mu, sigma),
mu~beta0+beta1*F1+beta2*F2,
beta0~dnorm(80, 100),
beta1~dnorm(0, 10),
beta2~dnorm(0, 10),
sigma ~ dunif(0, 50)
), data=LE_FF_d_f
)
precis(Bayes_fit_LE_d_f)
round( vcov(Bayes_fit_LE_d_f) , 3 )
post<-extract.samples(m4.3)
post
post<-extract.samples(Bayes_fit_LE_d_f)
post
hist(post)
post %>% tbl_df()
purrr::map(post, hist)
purrr::map(post, hist)
desn(post)
dens(post)
rethinking::HPDI(post)
rethinking::HPDI(post$beta0)
rethinking::HPDI(post$beta0)
rethinking::HPDI(post$beta1)
rethinking::HPDI(post$beta2)
rethinking::PI(post$beta0)
rethinking::PI(post$beta0)
rethinking::PI(post$beta1)
rethinking::PI(post$beta2)
precis(Bayes_fit_LE_d_f)
dens(post)
dens(post)
dens(post)
dens(c(1,1,1))
dens(post)
dens(post$beta0)
mu_at_50<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*mean(LE_FF_d_f$F2)
mu_at_50
mu_at_50
mu_at_50 %>% hist()
mu_at_50 %>% dens()
LE_FF_d_f$F2 %>% quantile()
LE_FF_d_f$F2 %>% quantile() %>% class()
mu_at_Q1<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[1]
mu_at_Q1
mu_at_Q1 %>% dens()
mu_at_Q2<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[2]
mu_at_Q1 %>% dens()
mu_at_Q2 %>% dens()
mu_at_Q2
mu_at_Q1<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[1]
mu_at_Q2<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[2]
mu_at_Q3<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[3]
mu_at_Q4<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[4]
mu_at_Q5<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[5]
mu_at_Q1 %>% dens()
mu_at_Q2 %>% dens()
mu_at_Q3 %>% dens()
mu_at_Q4 %>% dens()
mu_at_Q5 %>% dens()
mu_at_Q1 %>% dens(main = "aaa")
mu_at_Q1 %>% dens(main = "F2が Q1である場合")
par(family= "HiraKakuProN-W3")
mu_at_Q1 %>% dens(main = "F2が Q1である場合")
par(family= "HiraKakuProN-W3")
mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合")
mu_at_Q3 %>% dens(main = "F2が Q3である場合")
mu_at_Q4 %>% dens(main = "F2が Q4である場合")
mu_at_Q5 %>% dens(main = "F2が Q5である場合")
mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", add = T)
mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", add = T)
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
quantile(LE_FF_d_f$F2)[1]
quantile(LE_FF_d_f$F2)[2]
# par(mar=c(4,4,2,2)+0.1)
par(mfrow=c(1,1))
mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", add = T)
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合")
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
quantile(LE_FF_d_f$F2)[5]
quantile(LE_FF_d_f$F2)[4]
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(1,2))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(-100, 100))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(50, 100))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(50, 90))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(81, 90))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86, 90))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86, 88))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86, 87))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87.5))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87.4))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q1 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87.4))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", add = T)
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
# mu_at_Q1 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87.4))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87.4))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
mu_at_Q2 %>% dens(main = "F2因子の変化による平均寿命分布の変化", xlim=c(86.4, 87.4))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
