mu_at_Q3 %>% dens(main = "F1が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F1が Q4である場合", add = T)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x) %>%
mutate(ccdf=1-y)
}
aa$ccdf<-purrr::map(aa$data, name)
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name, color=name))+geom_line()+theme_bw(base_family = "HiraKakuProN-W3")+xlim(86.8, 87.2)
suppressMessages(library(rethinking))
Bayes_fit_LE_d_m<-
rethinking::map(alist(
LE~dnorm(mu, sigma),
mu~beta0+beta1*F1+beta2*F2,
beta0~dnorm(80, 100),
beta1~dnorm(0, 10),
beta2~dnorm(0, 10),
sigma ~ dunif(0, 50)
), data=LE_FF_d_m
)
precis(Bayes_fit_LE_d_m)
post<-extract.samples(Bayes_fit_LE_d_m)
# purrr::map(post, hist)
# rethinking::HPDI(post$beta0)
# rethinking::HPDI(post$beta1)
# rethinking::HPDI(post$beta2)
# rethinking::PI(post$beta0)
# rethinking::PI(post$beta1)
# rethinking::PI(post$beta2)
dens(post)
mu_at_Q1<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[1]
mu_at_Q2<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[2]
mu_at_Q3<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[3]
mu_at_Q4<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[4]
mu_at_Q5<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[5]
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F2因子の寿命分布への影響", xlim=c(80-.3, 80+2))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x) %>%
mutate(ccdf=1-y)
}
aa$ccdf<-purrr::map(aa$data, name)
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name, color=name))+geom_line()+theme_bw(base_family = "HiraKakuProN-W3")+xlim(80-.3, 80+2)
mu_at_Q1<-post$beta0 + post$beta1*quantile(LE_FF_d_m$F1)[1]+ post$beta2*mean(LE_FF_d_m$F2)
mu_at_Q2<-post$beta0 + post$beta1*quantile(LE_FF_d_m$F1)[2]+ post$beta2*mean(LE_FF_d_m$F2)
mu_at_Q3<-post$beta0 + post$beta1*quantile(LE_FF_d_m$F1)[3]+ post$beta2*mean(LE_FF_d_m$F2)
mu_at_Q4<-post$beta0 + post$beta1*quantile(LE_FF_d_m$F1)[4]+ post$beta2*mean(LE_FF_d_m$F2)
mu_at_Q5<-post$beta0 + post$beta1*quantile(LE_FF_d_m$F1)[5]+ post$beta2*mean(LE_FF_d_m$F2)
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F1因子の寿命への影響", xlim=c(80-.3, 80+2))
mu_at_Q3 %>% dens(main = "F1が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F1が Q4である場合", add = T)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x) %>%
mutate(ccdf=1-y)
}
aa$ccdf<-purrr::map(aa$data, name)
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name, color=name))+geom_line()+theme_bw(base_family = "HiraKakuProN-W3")+xlim(80-.3, 80+2)
suppressMessages(library(rethinking))
Bayes_fit_HLE_d_f<-
rethinking::map(alist(
HLE~dnorm(mu, sigma),
mu~beta0+beta1*F1+beta2*F2,
beta0~dnorm(80, 100),
beta1~dnorm(0, 10),
beta2~dnorm(0, 10),
sigma ~ dunif(0, 50)
), data=HLE_FF_d_f
)
precis(Bayes_fit_HLE_d_f)
post<-extract.samples(Bayes_fit_HLE_d_f)
# purrr::map(post, hist)
# rethinking::HPDI(post$beta0)
# rethinking::HPDI(post$beta1)
# rethinking::HPDI(post$beta2)
# rethinking::PI(post$beta0)
# rethinking::PI(post$beta1)
# rethinking::PI(post$beta2)
dens(post)
mu_at_Q1<-post$beta0 + post$beta1*mean(HLE_FF_d_f$F1)+ post$beta2*quantile(HLE_FF_d_f$F2)[1]
mu_at_Q2<-post$beta0 + post$beta1*mean(HLE_FF_d_f$F1)+ post$beta2*quantile(HLE_FF_d_f$F2)[2]
mu_at_Q3<-post$beta0 + post$beta1*mean(HLE_FF_d_f$F1)+ post$beta2*quantile(HLE_FF_d_f$F2)[3]
mu_at_Q4<-post$beta0 + post$beta1*mean(HLE_FF_d_f$F1)+ post$beta2*quantile(HLE_FF_d_f$F2)[4]
mu_at_Q5<-post$beta0 + post$beta1*mean(HLE_FF_d_f$F1)+ post$beta2*quantile(HLE_FF_d_f$F2)[5]
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F2因子の寿命分布への影響", xlim=c(75-.1, 75+.1))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F2因子の寿命分布への影響", xlim=c(75-.1, 75+.1))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F2因子の寿命分布への影響", xlim=c(75-.2, 75+.2))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F2因子の寿命分布への影響", xlim=c(75-.3, 75+.3))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x) %>%
mutate(ccdf=1-y)
}
aa$ccdf<-purrr::map(aa$data, name)
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name, color=name))+geom_line()+theme_bw(base_family = "HiraKakuProN-W3")+xlim(86.8, 87.2)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x) %>%
mutate(ccdf=1-y)
}
aa$ccdf<-purrr::map(aa$data, name)
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name, color=name))+geom_line()+theme_bw(base_family = "HiraKakuProN-W3")+xlim(75-.3, 75+.3)
mu_at_Q1<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[1]
mu_at_Q2<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[2]
mu_at_Q3<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[3]
mu_at_Q4<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[4]
mu_at_Q5<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[5]
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F2因子の寿命分布への影響", xlim=c(80, 81))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x) %>%
mutate(ccdf=1-y)
}
aa$ccdf<-purrr::map(aa$data, name)
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name, color=name))+geom_line()+theme_bw(base_family = "HiraKakuProN-W3")+xlim(80, 81)
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F2因子の寿命分布への影響", xlim=c(80, 81))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q1<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[1]
mu_at_Q2<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[2]
mu_at_Q3<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[3]
mu_at_Q4<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[4]
mu_at_Q5<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[5]
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F2因子の寿命分布への影響", xlim=c(80-.3, 80+2))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x) %>%
mutate(ccdf=1-y)
}
aa$ccdf<-purrr::map(aa$data, name)
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name, color=name))+geom_line()+theme_bw(base_family = "HiraKakuProN-W3")+xlim(80-.3, 80+2)
mu_at_Q1<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[1]
mu_at_Q2<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[2]
mu_at_Q3<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[3]
mu_at_Q4<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[4]
mu_at_Q5<-post$beta0 + post$beta1*mean(LE_FF_d_m$F1)+ post$beta2*quantile(LE_FF_d_m$F2)[5]
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F2因子の寿命分布への影響", xlim=c(80-.3, 80+2))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
mu_at_Q1<-post$beta0 + post$beta1*quantile(HLE_FF_d_f$F1)[1]+ post$beta2*mean(HLE_FF_d_f$F2)
mu_at_Q2<-post$beta0 + post$beta1*quantile(HLE_FF_d_f$F1)[2]+ post$beta2*mean(HLE_FF_d_f$F2)
mu_at_Q3<-post$beta0 + post$beta1*quantile(HLE_FF_d_f$F1)[3]+ post$beta2*mean(HLE_FF_d_f$F2)
mu_at_Q4<-post$beta0 + post$beta1*quantile(HLE_FF_d_f$F1)[4]+ post$beta2*mean(HLE_FF_d_f$F2)
mu_at_Q5<-post$beta0 + post$beta1*quantile(HLE_FF_d_f$F1)[5]+ post$beta2*mean(HLE_FF_d_f$F2)
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F1因子の寿命への影響", xlim=c(75-.3, 75+.3))
mu_at_Q3 %>% dens(main = "F1が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F1が Q4である場合", add = T)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x) %>%
mutate(ccdf=1-y)
}
aa$ccdf<-purrr::map(aa$data, name)
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name, color=name))+geom_line()+theme_bw(base_family = "HiraKakuProN-W3")+xlim(75-.3, 75+.3)
suppressMessages(library(rethinking))
Bayes_fit_HLE_d_m<-
rethinking::map(alist(
HLE~dnorm(mu, sigma),
mu~beta0+beta1*F1+beta2*F2,
beta0~dnorm(80, 100),
beta1~dnorm(0, 10),
beta2~dnorm(0, 10),
sigma ~ dunif(0, 50)
), data=HLE_FF_d_m
)
### F1, F2 因子効果および切片効果 and PI
```{r}
precis(Bayes_fit_HLE_d_m)
### 因子効果、共分散
```{r}
round( vcov(Bayes_fit_HLE_d_m) , 3 )
### 事後分布推定
```{r}
post<-extract.samples(Bayes_fit_HLE_d_m)
# rethinking::PI(post$beta0)
# rethinking::PI(post$beta1)
# rethinking::PI(post$beta2)
dens(post)
# rethinking::PI(post$beta0)
# rethinking::PI(post$beta1)
# rethinking::PI(post$beta2)
dens(post)
### 事後分布: 因子効果の可視化
- F2因子の寿命分布への影響
```{r warning=FALSE}
mu_at_Q1<-post$beta0 + post$beta1*mean(HLE_FF_d_m$F1)+ post$beta2*quantile(HLE_FF_d_m$F2)[1]
mu_at_Q2<-post$beta0 + post$beta1*mean(HLE_FF_d_m$F1)+ post$beta2*quantile(HLE_FF_d_m$F2)[2]
mu_at_Q3<-post$beta0 + post$beta1*mean(HLE_FF_d_m$F1)+ post$beta2*quantile(HLE_FF_d_m$F2)[3]
mu_at_Q4<-post$beta0 + post$beta1*mean(HLE_FF_d_m$F1)+ post$beta2*quantile(HLE_FF_d_m$F2)[4]
mu_at_Q5<-post$beta0 + post$beta1*mean(HLE_FF_d_m$F1)+ post$beta2*quantile(HLE_FF_d_m$F2)[5]
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F2因子の寿命分布への影響", xlim=c(72-.3, 72+2))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x) %>%
mutate(ccdf=1-y)
}
aa$ccdf<-purrr::map(aa$data, name)
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name, color=name))+geom_line()+theme_bw(base_family = "HiraKakuProN-W3")+xlim(72-.3, 72+2)
mu_at_Q1<-post$beta0 + post$beta1*mean(HLE_FF_d_m$F1)+ post$beta2*quantile(HLE_FF_d_m$F2)[1]
mu_at_Q2<-post$beta0 + post$beta1*mean(HLE_FF_d_m$F1)+ post$beta2*quantile(HLE_FF_d_m$F2)[2]
mu_at_Q3<-post$beta0 + post$beta1*mean(HLE_FF_d_m$F1)+ post$beta2*quantile(HLE_FF_d_m$F2)[3]
mu_at_Q4<-post$beta0 + post$beta1*mean(HLE_FF_d_m$F1)+ post$beta2*quantile(HLE_FF_d_m$F2)[4]
mu_at_Q5<-post$beta0 + post$beta1*mean(HLE_FF_d_m$F1)+ post$beta2*quantile(HLE_FF_d_m$F2)[5]
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F2因子の寿命分布への影響", xlim=c(72-.3, 72+.3))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x) %>%
mutate(ccdf=1-y)
}
aa$ccdf<-purrr::map(aa$data, name)
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name, color=name))+geom_line()+theme_bw(base_family = "HiraKakuProN-W3")+xlim(72-.3, 72+.3)
- F1因子の寿命への影響
```{r}
mu_at_Q1<-post$beta0 + post$beta1*quantile(HLE_FF_d_m$F1)[1]+ post$beta2*mean(HLE_FF_d_m$F2)
mu_at_Q2<-post$beta0 + post$beta1*quantile(HLE_FF_d_m$F1)[2]+ post$beta2*mean(HLE_FF_d_m$F2)
mu_at_Q3<-post$beta0 + post$beta1*quantile(HLE_FF_d_m$F1)[3]+ post$beta2*mean(HLE_FF_d_m$F2)
mu_at_Q4<-post$beta0 + post$beta1*quantile(HLE_FF_d_m$F1)[4]+ post$beta2*mean(HLE_FF_d_m$F2)
mu_at_Q5<-post$beta0 + post$beta1*quantile(HLE_FF_d_m$F1)[5]+ post$beta2*mean(HLE_FF_d_m$F2)
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F1因子の寿命への影響", xlim=c(72-.3, 72+.3))
mu_at_Q3 %>% dens(main = "F1が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F1が Q4である場合", add = T)
par(family= "HiraKakuProN-W3")
mu_at_Q2 %>% dens(main = "F1因子の寿命への影響", xlim=c(72-.3, 72+.3))
mu_at_Q3 %>% dens(main = "F1が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F1が Q4である場合", add = T)
#install.packages("vcd")
#install.packages("vcdExtra")
library(vcd)
library(vcdExtra)
suppressMessages(library(tidyverse)) # allows use pipe %>% , control(or command) + shift + M
suppressMessages(library(kableExtra))
suppressMessages(library(epiR))
# our class pkg
# library(devtools)
# devtools::install_github(repo = "luka3117/JcPackage/OsakaUniv2020")
# remove.packages("OsakaUniv2020")
# help(package = "OsakaUniv2020")
library(OsakaUniv2020)
packageVersion("OsakaUniv2020")
OsakaUniv2020::table4.2
OsakaUniv2020::table4.2 %>% round(3) %>% DT::datatable()
plot(table4.2$p~table4.2$snoring)
w <- n / (p * (1 - p))
m.linear <-
glm(p ~ snoring, weights = w, data = OsakaUniv2020::table4.2)
summary(m.linear)
m.linear %>% broom::tidy() %>% DT::datatable()
m.linear$fitted.values
w
m.linear %>% broom::augment() %>% round(2) %>% DT::datatable()
m.linear %>% broom::glance() %>% round(2) %>% DT::datatable()
w <- n / (p * (1 - p))
m.linear <-
glm(p ~ snoring, weights = w, data = OsakaUniv2020::table4.2)
summary(m.linear)
m.linear %>% broom::tidy() %>% DT::datatable()
w <- n / (p * (1 - p))
m.linear <-
glm(p ~ snoring, weights = w, data = OsakaUniv2020::table4.2)
OsakaUniv2020::table4.2
m.linear <-
glm(p ~ snoring, weights = w, data = OsakaUniv2020::table4.2)
table4.2.long.form<-
table4.2 %>% tidyr::pivot_longer(data = .,
cols = c("yes", "no"),
names_to = "dz",values_to = "count") %>%
select(dz, snoring, count) %>%  count.to.case(df = .,count.variabe = "count") %>% tbl_df()
table4.2.long.form %>% colnames()
dim(table4.2.long.form)
glm(dz ~ snoring, data = table4.2.long.form)
table4.2.long.form
glm(dz ~ snoring, data = table4.2.long.form)
#install.packages("vcd")
#install.packages("vcdExtra")
library(vcd)
library(vcdExtra)
suppressMessages(library(tidyverse)) # allows use pipe %>% , control(or command) + shift + M
suppressMessages(library(kableExtra))
suppressMessages(library(epiR))
suppressMessages(library(broom))
# our class pkg
# library(devtools)
# devtools::install_github(repo = "luka3117/JcPackage/OsakaUniv2020")
# remove.packages("OsakaUniv2020")
# help(package = "OsakaUniv2020")
library(OsakaUniv2020)
# our class pkg
# library(devtools)
# devtools::install_github(repo = "luka3117/JcPackage/OsakaUniv2020")
# remove.packages("OsakaUniv2020")
# help(package = "OsakaUniv2020")
library(OsakaUniv2020)
packageVersion("OsakaUniv2020")
# page 121 linear probability model estimation
## snoring data structure
```{r}
OsakaUniv2020::table4.2
OsakaUniv2020::table4.2 %>% round(3) %>% DT::datatable()
plot(table4.2$p~table4.2$snoring)
## snoring data linear prob model fitting
- $\pi=\beta_0+\beta_1 snoring$
```{r}
w <- n / (p * (1 - p))
m.linear <-
glm(p ~ snoring, weights = w, data = OsakaUniv2020::table4.2)
summary(m.linear)
m.linear %>% broom::tidy() %>% DT::datatable()
m.linear$fitted.values
w
w <- n / (p * (1 - p))
m.linear <-
glm(p ~ snoring, weights = w, data = OsakaUniv2020::table4.2)
OsakaUniv2020::table4.2
system("open .")
system("open .")
system("open .")
system("open .")
devtools::load_all(".")
# devtools::install_github(repo = "luka3117/JcPackage/OsakaUniv2020")
# # -----------------
#  ____           __  __       _            _       _
# |  _ \ _ __ ___|  \/  | __ _| |_ ___ _ __(_) __ _| |
# | |_) | '__/ _ \ |\/| |/ _` | __/ _ \ '__| |/ _` | |
# |  __/| | |  __/ |  | | (_| | ||  __/ |  | | (_| | |
# |_|   |_|  \___|_|  |_|\__,_|\__\___|_|  |_|\__,_|_|
# # -----------------
# 使用package
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(data.table))
suppressMessages(library(kableExtra))
suppressMessages(library(curl))
suppressMessages(library(tidyverse))
suppressMessages(library(plotly))
suppressMessages(library(ggrepel))
suppressMessages(library(magrittr))
load("../ScreenEnd.RData")
# -----------------
# Q1:Do the final regression and interprete : with 4 data
# -----------------
# ----------------- ----------------- ----------------- -----------------
#  _____ _             _   _     __  __
# |  ___(_)_ __   __ _| | | |   |  \/  |
# | |_  | | '_ \ / _` | | | |   | |\/| |
# |  _| | | | | | (_| | | | |___| |  | |
# |_|   |_|_| |_|\__,_|_| |_____|_|  |_|
# ----------------- ----------------- ----------------- -----------------
options(digits = 5)              # Modify global options
fit_with_X_lm_LE_d_f<-lm(LE_2015~. , data = LE_d_f_final)
lm(LE_2015~. , data = LE_d_f_final) %>%
broom::tidy() %>%
left_join(var, by=c("term"="var_name_Eng")) %>%
select(term, var_name_Jpn, everything(), -id,- address, -std.error, -columm_letter ) %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'statistic', "p.value"), digits=3)
options(digits = 5)              # Modify global options
fit_with_X_lm_LE_d_m<-lm(LE_2015~. , data = LE_d_m_final)
lm(LE_2015~. , data = LE_d_m_final) %>%
broom::tidy() %>%
left_join(var, by=c("term"="var_name_Eng")) %>%
select(term, var_name_Jpn, everything(), -id,- address, -std.error, -columm_letter ) %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'statistic', "p.value"), digits=3)
options(digits = 5)              # Modify global options
fit_with_X_lm_HLE_d_f<-lm(HLE_2016~. , data = HLE_d_f_final)
lm(HLE_2016~. , data = HLE_d_f_final) %>%
broom::tidy() %>%
left_join(var, by=c("term"="var_name_Eng")) %>%
select(term, var_name_Jpn, everything(), -id,- address, -std.error, -columm_letter ) %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'statistic', "p.value"), digits=3)
options(digits = 5)              # Modify global options
fit_with_X_lm_HLE_d_m<-lm(HLE_2016~. , data = HLE_d_m_final)
lm(HLE_2016~. , data = HLE_d_m_final) %>%
broom::tidy() %>%
left_join(var, by=c("term"="var_name_Eng")) %>%
select(term, var_name_Jpn, everything(), -id,- address, -std.error, -columm_letter ) %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'statistic', "p.value"), digits=3)
LE_d_f_final.reg<-lm(LE_2015~. , data = LE_d_f_final)
d_f_.FA<-LE_d_f_final.reg$model[,-1] %>% zemi::JcFA()
rownames(d_f_.FA$VAR.rotate)<-colnames(LE_d_f_final.reg$model[,-1] )
d_f_.FA$VAR.rotate %>% data.frame() %>% rownames_to_column() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
select(rowname,var_name_Jpn,X1,X2) %>% rename(F1=X1, F2=X2) %>%
DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
d_f_.FA$OBS.rotate %>% as.data.frame() %>% tbl_df() %>%
rename(F1=V1, F2=V2) %>%
mutate(pref.J=d_common$pref.J)%>% select(pref.J, everything()) %>%
DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
LE_d_m_final.reg<-lm(LE_2015~. , data = LE_d_m_final)
d_m_.FA<-LE_d_m_final.reg$model[,-1] %>% zemi::JcFA()
rownames(d_m_.FA$VAR.rotate)<-colnames(LE_d_m_final.reg$model[,-1] )
d_m_.FA$VAR.rotate %>% data.frame() %>% rownames_to_column() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
select(rowname,var_name_Jpn,X1,X2) %>% rename(F1=X1, F2=X2) %>%
DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
fit_with_X_lm_LE_d_f
summary(fit_with_X_lm_LE_d_f)
system("open .")
library(xtable)
data(tli)
tli
suppressMessages(library(tidyverse))
tli %>% as_tibble()
?tli
xtable(tli[1:10, ])
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
xtable(tli[1:10, ])
library(xtable)
xtable(tli[1:10, ])
xtable(tli[1:10, ]) %>% write.table()
xtable(tli[1:10, ])
xtable(tli[1:10, ]) %>%sink("aa.txt")
sink("aa.txt")
xtable(tli[1:10, ])
system("open .")
sink("aa.tex")
xtable(tli[1:10, ])
iris
sink()
iris
iris
sink("aa.tex")
xtable(tli[1:10, ])
sink()
iris
sink()
iris
iris
iris
iris
sink("aa.tex")
xtable(tli[1:10, ])
iris
system("open .")
sink()
iris
sink("aa.tex")
xtable(tli[1:10, ])
sink()
iris
