DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
d_m_.FA$OBS.rotate %>% as.data.frame() %>% tbl_df() %>%
rename(F1=V1, F2=V2) %>%
mutate(pref.J=d_common$pref.J)%>% select(pref.J, everything()) %>%
DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
lm(LE_d_f_final$LE_2015~d_f_.FA$OBS.rotate) %>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
lm(LE_d_f_final$LE_2015~d_f_.FA$OBS.rotate) %>% broom::glance()
lm(HLE_d_f_final$HLE_2016~d_f_.FA$OBS.rotate) %>% broom::tidy()%>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
lm(HLE_d_f_final$HLE_2016~d_f_.FA$OBS.rotate) %>% broom::glance()
lm(LE_d_m_final$LE_2015~d_m_.FA$OBS.rotate) %>% broom::tidy()%>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
lm(LE_d_m_final$LE_2015~d_m_.FA$OBS.rotate) %>% broom::glance()
lm(HLE_d_m_final$HLE_2016~d_m_.FA$OBS.rotate) %>% broom::tidy()%>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
lm(HLE_d_m_final$HLE_2016~d_m_.FA$OBS.rotate) %>% broom::glance()
LE_d_f_final$LE_binary <- ifelse(LE_d_f_final$LE_2015>median(LE_d_f_final$LE_2015),1,0)
HLE_d_f_final$HLE_binary <- ifelse(HLE_d_f_final$HLE_2016>median(HLE_d_f_final$HLE_2016),1,0)
LE_d_m_final$LE_binary <- ifelse(LE_d_m_final$LE_2015>median(LE_d_m_final$LE_2015),1,0)
HLE_d_m_final$HLE_binary <- ifelse(HLE_d_m_final$HLE_2016>median(HLE_d_m_final$HLE_2016),1,0)
LE_d_f_final$LE_binary   # 女性
HLE_d_f_final$HLE_binary   # 女性
LE_d_m_final$LE_binary   # 男性
HLE_d_m_final$HLE_binary   # 男性
glm(LE_d_f_final$LE_binary ~ d_f_.FA$OBS.rotate, family =  "binomial")%>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
glm(HLE_d_f_final$HLE_binary ~ d_f_.FA$OBS.rotate, family =  "binomial")%>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
glm(LE_d_m_final$LE_binary ~ d_m_.FA$OBS.rotate, family =  "binomial")%>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
glm(HLE_d_m_final$HLE_binary ~ d_m_.FA$OBS.rotate, family =  "binomial")%>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
LE_FF_d_f=LE_d_f_final$LE_2015 %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))%>%
rename(LE=value,F1=V1, F2=V2) %>% select(-name)
# mutate(LE=as.factor(LE_binary))
glm(LE~., family=Gamma(link="log"), data=LE_FF_d_f) %>%
broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
HLE_FF_d_f=HLE_d_f_final$HLE_2016 %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))%>%
rename(HLE=value,F1=V1, F2=V2) %>% select(-name)
# mutate(HLE=as.factor(HLE_binary))
glm(HLE~., family=Gamma(link="log"), data=HLE_FF_d_f) %>%
broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
LE_FF_d_m=LE_d_m_final$LE_2015 %>% enframe() %>%
bind_cols(as.data.frame(d_m_.FA$OBS.rotate))%>%
rename(LE=value,F1=V1, F2=V2) %>% select(-name)
# mutate(LE=as.factor(LE_binary))
glm(LE~., family=Gamma(link="log"), data=LE_FF_d_m) %>%
broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
HLE_FF_d_m=HLE_d_m_final$HLE_2016 %>% enframe() %>%
bind_cols(as.data.frame(d_m_.FA$OBS.rotate))%>%
rename(HLE=value,F1=V1, F2=V2) %>% select(-name)
# mutate(HLE=as.factor(HLE_binary))
glm(HLE~., family=Gamma(link="log"), data=HLE_FF_d_m) %>%
broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
ls()
ls()
ls(pattern = "LE")
ls(pattern = "FF")
LE_FF_d_f
library(rethinking)
Bayes_fit_LE_d_f<-
rethinking::map(alist(
LE~dnorm(mu, sigma),
mu~beta0+beta1*F1+beta2*F2,
beta0~dnorm(80, 100),
beta1~dnorm(0, 10),
beta2~dnorm(0, 10),
sigma ~ dunif(0, 50)
), data=LE_FF_d_f
)
precis(Bayes_fit_LE_d_f)
round( vcov(Bayes_fit_LE_d_f) , 3 )
post<-extract.samples(m4.3)
post
post<-extract.samples(Bayes_fit_LE_d_f)
post
hist(post)
post %>% tbl_df()
purrr::map(post, hist)
purrr::map(post, hist)
desn(post)
dens(post)
rethinking::HPDI(post)
rethinking::HPDI(post$beta0)
rethinking::HPDI(post$beta0)
rethinking::HPDI(post$beta1)
rethinking::HPDI(post$beta2)
rethinking::PI(post$beta0)
rethinking::PI(post$beta0)
rethinking::PI(post$beta1)
rethinking::PI(post$beta2)
precis(Bayes_fit_LE_d_f)
dens(post)
dens(post)
dens(post)
dens(c(1,1,1))
dens(post)
dens(post$beta0)
mu_at_50<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*mean(LE_FF_d_f$F2)
mu_at_50
mu_at_50
mu_at_50 %>% hist()
mu_at_50 %>% dens()
LE_FF_d_f$F2 %>% quantile()
LE_FF_d_f$F2 %>% quantile() %>% class()
mu_at_Q1<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[1]
mu_at_Q1
mu_at_Q1 %>% dens()
mu_at_Q2<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[2]
mu_at_Q1 %>% dens()
mu_at_Q2 %>% dens()
mu_at_Q2
mu_at_Q1<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[1]
mu_at_Q2<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[2]
mu_at_Q3<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[3]
mu_at_Q4<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[4]
mu_at_Q5<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[5]
mu_at_Q1 %>% dens()
mu_at_Q2 %>% dens()
mu_at_Q3 %>% dens()
mu_at_Q4 %>% dens()
mu_at_Q5 %>% dens()
mu_at_Q1 %>% dens(main = "aaa")
mu_at_Q1 %>% dens(main = "F2が Q1である場合")
par(family= "HiraKakuProN-W3")
mu_at_Q1 %>% dens(main = "F2が Q1である場合")
par(family= "HiraKakuProN-W3")
mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合")
mu_at_Q3 %>% dens(main = "F2が Q3である場合")
mu_at_Q4 %>% dens(main = "F2が Q4である場合")
mu_at_Q5 %>% dens(main = "F2が Q5である場合")
mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", add = T)
mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", add = T)
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
quantile(LE_FF_d_f$F2)[1]
quantile(LE_FF_d_f$F2)[2]
# par(mar=c(4,4,2,2)+0.1)
par(mfrow=c(1,1))
mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", add = T)
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合")
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
quantile(LE_FF_d_f$F2)[5]
quantile(LE_FF_d_f$F2)[4]
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(1,2))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(-100, 100))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(50, 100))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(50, 90))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(81, 90))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86, 90))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86, 88))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86, 87))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87.5))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87.4))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
mu_at_Q1 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87.4))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", add = T)
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
# mu_at_Q1 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87.4))
mu_at_Q2 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87.4))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
mu_at_Q2 %>% dens(main = "F2因子の変化による平均寿命分布の変化", xlim=c(86.4, 87.4))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
HPDI
# devtools::install_github(repo = "luka3117/JcPackage/OsakaUniv2020")
# # -----------------
#  ____           __  __       _            _       _
# |  _ \ _ __ ___|  \/  | __ _| |_ ___ _ __(_) __ _| |
# | |_) | '__/ _ \ |\/| |/ _` | __/ _ \ '__| |/ _` | |
# |  __/| | |  __/ |  | | (_| | ||  __/ |  | | (_| | |
# |_|   |_|  \___|_|  |_|\__,_|\__\___|_|  |_|\__,_|_|
# # -----------------
# 使用package
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(data.table))
suppressMessages(library(kableExtra))
suppressMessages(library(curl))
suppressMessages(library(tidyverse))
suppressMessages(library(plotly))
suppressMessages(library(ggrepel))
suppressMessages(library(magrittr))
load("../ScreenEnd.RData")
# -----------------
# Q1:Do the final regression and interprete : with 4 data
# -----------------
# ----------------- ----------------- ----------------- -----------------
#  _____ _             _   _     __  __
# |  ___(_)_ __   __ _| | | |   |  \/  |
# | |_  | | '_ \ / _` | | | |   | |\/| |
# |  _| | | | | | (_| | | | |___| |  | |
# |_|   |_|_| |_|\__,_|_| |_____|_|  |_|
# ----------------- ----------------- ----------------- -----------------
options(digits = 5)              # Modify global options
lm(LE_2015~. , data = LE_d_f_final) %>%
broom::tidy() %>%
left_join(var, by=c("term"="var_name_Eng")) %>%
select(term, var_name_Jpn, everything(), -id,- address, -std.error, -columm_letter ) %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'statistic', "p.value"), digits=3)
options(digits = 5)              # Modify global options
lm(LE_2015~. , data = LE_d_m_final) %>%
broom::tidy() %>%
left_join(var, by=c("term"="var_name_Eng")) %>%
select(term, var_name_Jpn, everything(), -id,- address, -std.error, -columm_letter ) %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'statistic', "p.value"), digits=3)
options(digits = 5)              # Modify global options
lm(HLE_2016~. , data = HLE_d_f_final) %>%
broom::tidy() %>%
left_join(var, by=c("term"="var_name_Eng")) %>%
select(term, var_name_Jpn, everything(), -id,- address, -std.error, -columm_letter ) %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'statistic', "p.value"), digits=3)
options(digits = 5)              # Modify global options
lm(HLE_2016~. , data = HLE_d_m_final) %>%
broom::tidy() %>%
left_join(var, by=c("term"="var_name_Eng")) %>%
select(term, var_name_Jpn, everything(), -id,- address, -std.error, -columm_letter ) %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'statistic', "p.value"), digits=3)
LE_d_f_final.reg<-lm(LE_2015~. , data = LE_d_f_final)
d_f_.FA<-LE_d_f_final.reg$model[,-1] %>% zemi::JcFA()
rownames(d_f_.FA$VAR.rotate)<-colnames(LE_d_f_final.reg$model[,-1] )
d_f_.FA$VAR.rotate %>% data.frame() %>% rownames_to_column() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
select(rowname,var_name_Jpn,X1,X2) %>% rename(F1=X1, F2=X2) %>%
DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
d_f_.FA$OBS.rotate %>% as.data.frame() %>% tbl_df() %>%
rename(F1=V1, F2=V2) %>%
mutate(pref.J=d_common$pref.J)%>% select(pref.J, everything()) %>%
DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
LE_d_m_final.reg<-lm(LE_2015~. , data = LE_d_m_final)
d_m_.FA<-LE_d_m_final.reg$model[,-1] %>% zemi::JcFA()
rownames(d_m_.FA$VAR.rotate)<-colnames(LE_d_m_final.reg$model[,-1] )
d_m_.FA$VAR.rotate %>% data.frame() %>% rownames_to_column() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
select(rowname,var_name_Jpn,X1,X2) %>% rename(F1=X1, F2=X2) %>%
DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
d_m_.FA$OBS.rotate %>% as.data.frame() %>% tbl_df() %>%
rename(F1=V1, F2=V2) %>%
mutate(pref.J=d_common$pref.J)%>% select(pref.J, everything()) %>%
DT::datatable() %>% DT::formatRound(columns=c('F1', 'F2'), digits=3)
lm(LE_d_f_final$LE_2015~d_f_.FA$OBS.rotate) %>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
lm(LE_d_f_final$LE_2015~d_f_.FA$OBS.rotate) %>% broom::glance()
lm(LE_d_m_final$LE_2015~d_m_.FA$OBS.rotate) %>% broom::tidy()%>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
lm(LE_d_m_final$LE_2015~d_m_.FA$OBS.rotate) %>% broom::glance()
lm(HLE_d_f_final$HLE_2016~d_f_.FA$OBS.rotate) %>% broom::tidy()%>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
lm(HLE_d_f_final$HLE_2016~d_f_.FA$OBS.rotate) %>% broom::glance()
lm(HLE_d_m_final$HLE_2016~d_m_.FA$OBS.rotate) %>% broom::tidy()%>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
lm(HLE_d_m_final$HLE_2016~d_m_.FA$OBS.rotate) %>% broom::glance()
LE_FF_d_f=LE_d_f_final$LE_2015 %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))%>%
rename(LE=value,F1=V1, F2=V2) %>% select(-name)
# mutate(LE=as.factor(LE_binary))
glm(LE~., family=Gamma(link="log"), data=LE_FF_d_f) %>%
broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
LE_FF_d_m=LE_d_m_final$LE_2015 %>% enframe() %>%
bind_cols(as.data.frame(d_m_.FA$OBS.rotate))%>%
rename(LE=value,F1=V1, F2=V2) %>% select(-name)
# mutate(LE=as.factor(LE_binary))
glm(LE~., family=Gamma(link="log"), data=LE_FF_d_m) %>%
broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
HLE_FF_d_f=HLE_d_f_final$HLE_2016 %>% enframe() %>%
bind_cols(as.data.frame(d_f_.FA$OBS.rotate))%>%
rename(HLE=value,F1=V1, F2=V2) %>% select(-name)
# mutate(HLE=as.factor(HLE_binary))
glm(HLE~., family=Gamma(link="log"), data=HLE_FF_d_f) %>%
broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
HLE_FF_d_m=HLE_d_m_final$HLE_2016 %>% enframe() %>%
bind_cols(as.data.frame(d_m_.FA$OBS.rotate))%>%
rename(HLE=value,F1=V1, F2=V2) %>% select(-name)
# mutate(HLE=as.factor(HLE_binary))
glm(HLE~., family=Gamma(link="log"), data=HLE_FF_d_m) %>%
broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
LE_d_f_final$LE_binary <- ifelse(LE_d_f_final$LE_2015>median(LE_d_f_final$LE_2015),1,0)
HLE_d_f_final$HLE_binary <- ifelse(HLE_d_f_final$HLE_2016>median(HLE_d_f_final$HLE_2016),1,0)
LE_d_m_final$LE_binary <- ifelse(LE_d_m_final$LE_2015>median(LE_d_m_final$LE_2015),1,0)
HLE_d_m_final$HLE_binary <- ifelse(HLE_d_m_final$HLE_2016>median(HLE_d_m_final$HLE_2016),1,0)
LE_d_f_final$LE_binary   # 女性
HLE_d_f_final$HLE_binary   # 女性
LE_d_m_final$LE_binary   # 男性
HLE_d_m_final$HLE_binary   # 男性
glm(LE_d_f_final$LE_binary ~ d_f_.FA$OBS.rotate, family =  "binomial")%>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
glm(LE_d_m_final$LE_binary ~ d_m_.FA$OBS.rotate, family =  "binomial")%>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
glm(HLE_d_f_final$HLE_binary ~ d_f_.FA$OBS.rotate, family =  "binomial")%>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
glm(HLE_d_m_final$HLE_binary ~ d_m_.FA$OBS.rotate, family =  "binomial")%>% broom::tidy() %>% DT::datatable() %>% DT::formatRound(columns=c('estimate', 'std.error', 'statistic', 'p.value'), digits=3)
suppressMessages(library(rethinking))
Bayes_fit_LE_d_f<-
rethinking::map(alist(
LE~dnorm(mu, sigma),
mu~beta0+beta1*F1+beta2*F2,
beta0~dnorm(80, 100),
beta1~dnorm(0, 10),
beta2~dnorm(0, 10),
sigma ~ dunif(0, 50)
), data=LE_FF_d_f
)
precis(Bayes_fit_LE_d_f)
post<-extract.samples(Bayes_fit_LE_d_f)
# purrr::map(post, hist)
# rethinking::HPDI(post$beta0)
# rethinking::HPDI(post$beta1)
# rethinking::HPDI(post$beta2)
# rethinking::PI(post$beta0)
# rethinking::PI(post$beta1)
# rethinking::PI(post$beta2)
dens(post)
mu_at_Q1<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[1]
mu_at_Q2<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[2]
mu_at_Q3<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[3]
mu_at_Q4<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[4]
mu_at_Q5<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[5]
par(family= "HiraKakuProN-W3")
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
# mu_at_Q1 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87.4))
mu_at_Q2 %>% dens(main = "F2因子の変化による平均寿命分布の変化", xlim=c(86.4, 87.4))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
par(family= "HiraKakuProN-W3")
# par(mar=c(4,4,2,2)+0.1)
# par(mfrow=c(1,1))
# mu_at_Q1 %>% dens(main = "F2が Q1である場合")
# mu_at_Q1 %>% dens(main = "F2が Q2である場合", xlim=c(86.4, 87.4))
mu_at_Q2 %>% dens(main = "F2因子の変化による平均寿命分布の変化", xlim=c(86.4, 87.4))
mu_at_Q3 %>% dens(main = "F2が Q3である場合", add = T)
mu_at_Q4 %>% dens(main = "F2が Q4である場合", add = T)
mu_at_Q5 %>% dens(main = "F2が Q5である場合", add = T)
mu_at_Q1<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[1]
mu_at_Q1
mu_at_Q1 %>% class()
mu_at_Q2
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1)) %>% select(name,dens)
suppressMessages(library(tidyverse))
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1)) %>% select(name,dens)
mu_at_Q2
mu_at_Q3
tibble::tibble(mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3
)
tibble::tibble(mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3
) %>% pivot_longer()
tibble::tibble(mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3
) %>% pivot_longer(cols = everything())
tibble::tibble(mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3
) %>% pivot_longer(cols = everything()) %>% nest(name)
tibble::tibble(mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3
) %>% pivot_longer(cols = everything()) %>% nest(value)
tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything())
aa
aa %>% ggplot(aes(value))+stat_ecdf()
bb=ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())
bb
bb[[1]]
bb=ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())[[1]]
bb
bb %>% select(y, x)
bb
bb
bb %>% class()
bb %>% as_tibble() %>%
select(bb$y, bb$x)
bb %>% as_tibble()
bb
bb=ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())[1]
bb
bb %>% class()
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[1]
bb=ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[1]
class(bb)
bb=ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]]
class(bb)
bb %>% select(bb$y, bb$x)
bb %>% select(y, x)
bb %>% as_tibble() %>%
select(y, x)
bb %>% as_tibble() %>%
select(y, x) %>% plot(x, y, data=.)
plot(bb$y, bb$x)
plot(bb$y~bb$x)
plot(1-bb$y~bb$x)
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
aa
aa$data
aa$data[[1]]
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
aa
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]]
}
name(aa$data[1])
name(aa$data[[1]])
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x)
}
name(aa$data[[1]])
name(aa$data[[1]]) %>% as_tibble()
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x) %>%
mutate(ccdf=1-y)
}
name(aa$data[[1]]) %>% as_tibble()
bb=name(aa$data[[1]]) %>% as_tibble()
temp=name(aa$data[[1]]) %>% as_tibble()
temp=name(aa$data[[1]]) %>% as_tibble()
plot(temp$ccdf~temp$x)
aa
aa %>% mutate(ccdf=map(data, name))
map(aa$data, name))
map(aa$data, name)
aa$data
name
aa$data
map(aa$data, name)
purrr::map(aa$data, name)
aa %>% mutate(ccdf=purrr::map(data, name))
aa %>% mutate(ccdf=purrr::map(aa$data, name))
purrr::map(aa$data, name)
aa %>% mutate(ccdf=name(data))
aa$data
aa
aa$data[[1]]
purrr::map(aa$data, name)
purrr::map_df(aa$data, name)
purrr::map_df(aa$data, name) %>% tbl_df()
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
aa$data
purrr::map(aa$data
, name)
aa$ccdf<-purrr::map(aa$data
, name)
aa
mu_at_Q2<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[2]
mu_at_Q3<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[3]
mu_at_Q4<-post$beta0 + post$beta1*mean(LE_FF_d_f$F1)+ post$beta2*quantile(LE_FF_d_f$F2)[4]
aa<-tibble::tibble(
mu_at_Q2=mu_at_Q2,
mu_at_Q3=mu_at_Q3,
mu_at_Q4=mu_at_Q4
) %>% pivot_longer(cols = everything()) %>% nest(value)
name <- function(aa) {
ggplot_build(aa %>% ggplot(aes(value))+stat_ecdf())$data[[1]] %>% select(y, x) %>%
mutate(ccdf=1-y)
}
aa$ccdf<-purrr::map(aa$data, name)
aa
aa %>% unnest()
aa %>% unnest(cols = c(data, ccdf))
aa %>% unnest(cols = c(data, ccdf))
aa %>% unnest(cols = ccdf)
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf))+geom_point()
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf))+geom_point()+facet_wrap(~name)
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name))+geom_point()
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name, color=name))+geom_point()
aa %>% unnest(cols = ccdf) %>% ggplot(aes(x=x, y=ccdf, group=name, color=name))+geom_line()
system("open .")
