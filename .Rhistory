x=~HLE_2016,y=~pref.J ,
xend=~LE_2015,yend=~pref.J ,
# x = ~c, y = ~model,
# xend = ~h, yend = ~model,
color = I("gray"), showlegend = FALSE
) %>%
add_markers(
# x = ~c, y = ~model,
x=~HLE_2016,y=~pref.J ,
color = I("blue"),
name = "健康寿命"
) %>%
add_markers(
# x = ~h, y = ~model,
x=~LE_2015,y=~pref.J ,
color = I("red"),
name  = "平均寿命"
) %>%
layout(
xaxis = list(
range=c(60,83),
title="男性の平均寿命と健康寿命の差"
)
)
## ---- warning=FALSE--------------------------------
suppressMessages(library(plotly))
t<-d_f %>% select(pref.J,HLE_2016,LE_2015) %>%
mutate(pref.J=forcats::fct_reorder(pref.J, LE_2015))
t$pref.J
t %>%
# plot_ly(width = 600, height = 1000) %>%
plot_ly() %>%
add_segments(
x=~HLE_2016,y=~pref.J ,
xend=~LE_2015,yend=~pref.J ,
# x = ~c, y = ~model,
# xend = ~h, yend = ~model,
color = I("gray"), showlegend = FALSE
) %>%
add_markers(
# x = ~c, y = ~model,
x=~HLE_2016,y=~pref.J ,
color = I("blue"),
name = "健康寿命"
) %>%
add_markers(
# x = ~h, y = ~model,
x=~LE_2015,y=~pref.J ,
color = I("red"),
name  = "平均寿命"
) %>%
layout(
xaxis = list(
range=c(60,88),
title="女性の平均寿命と健康寿命の差"
)
)
## --------------------------------------------------
d_m %>% select(LE_2015) %>% bind_cols(Wakayama::pref["pref.J"]) %>% dplyr::arrange(LE_2015) %>% mutate(rank=row_number()) %>%DT::datatable()
## --------------------------------------------------
jc.dotplot <- function(x) {
# x is HLE or LE in c()　vector
names(x)<-Wakayama::pref$pref.J
x<-x[order(x)]
}
colfunc <- colorRampPalette(c("gray90","black"))
par(family= "HiraKakuProN-W3")
dotchart(
main = "平均寿命(2015年, 男性)",
jc.dotplot(d_m$LE_2015),
cex = 0.7,
lcolor = "gray90",
pch = 19,
col = colfunc(47),
pt.cex = 1.5
)
abline(v = 79, lty = 2)
## --------------------------------------------------
d_m %>% select(HLE_2016) %>% bind_cols(Wakayama::pref["pref.J"]) %>% dplyr::arrange(HLE_2016) %>% mutate(rank=row_number()) %>%DT::datatable()
## --------------------------------------------------
jc.dotplot <- function(x) {
# x is HLE or LE in c()　vector
names(x)<-Wakayama::pref$pref.J
x<-x[order(x)]
}
colfunc <- colorRampPalette(c("gray90","black"))
par(family= "HiraKakuProN-W3")
dotchart(
main = "健康寿命(2016年, 男性)",
jc.dotplot(d_m$HLE_2016),
cex = 0.7,
lcolor = "gray90",
pch = 19,
col = colfunc(47),
pt.cex = 1.5
)
abline(v = 79, lty = 2)
## --------------------------------------------------
d_f %>% select(LE_2015) %>% bind_cols(Wakayama::pref["pref.J"]) %>% dplyr::arrange(LE_2015) %>% mutate(rank=row_number()) %>%DT::datatable()
## --------------------------------------------------
jc.dotplot <- function(x) {
# x is HLE or LE in c()　vector
names(x)<-Wakayama::pref$pref.J
x<-x[order(x)]
}
colfunc <- colorRampPalette(c("gray90","black"))
par(family= "HiraKakuProN-W3")
dotchart(
main = "平均寿命(2015年, 女性)",
jc.dotplot(d_f$LE_2015),
cex = 0.7,
lcolor = "gray90",
pch = 19,
col = colfunc(47),
pt.cex = 1.5
)
abline(v = 79, lty = 2)
## --------------------------------------------------
d_f %>% select(HLE_2016) %>% bind_cols(Wakayama::pref["pref.J"]) %>% dplyr::arrange(HLE_2016) %>% mutate(rank=row_number()) %>%DT::datatable()
## --------------------------------------------------
jc.dotplot <- function(x) {
# x is HLE or LE in c()　vector
names(x)<-Wakayama::pref$pref.J
x<-x[order(x)]
}
colfunc <- colorRampPalette(c("gray90","black"))
par(family= "HiraKakuProN-W3")
dotchart(
main = "平均寿命(2015年, 女性)",
jc.dotplot(d_f$HLE_2016),
cex = 0.7,
lcolor = "gray90",
pch = 19,
col = colfunc(47),
pt.cex = 1.5
)
abline(v = 79, lty = 2)
## --------------------------------------------------
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>% DT::datatable()
## ---- warning=FALSE--------------------------------
# purrr::map(iris[,-5], ~hist(.x))
suppressMessages(library(plotly))
d_common_standarize<-
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% scale() %>% tbl_df()
d_common_standarize<-bind_cols(d_common["pref.id"], d_common_standarize)
d_common_standarize_long<-
d_common_standarize %>% dplyr::select_if(is.numeric) %>%
pivot_longer(
cols = -pref.id,
names_to ="var_name" ,
values_to ="value"
)
plot_ly(
x =d_common_standarize_long$value,
type = "histogram",
name = "Histogram",
frame =  ~d_common_standarize_long$var_name
)
## --------------------------------------------------
name1 <- function(temp) {
temp %>% select(value) %>% .[[1]] %>% density() %>%
broom::tidy()
}
d_common_standarize_long_density<-
d_common_standarize_long %>% group_by(var_name) %>% nest() %>% mutate(dens=map(data, name1)) %>% select(var_name, dens) %>% unnest()
d_common_standarize_long_density %>% DT::datatable()
d_common_standarize_long_density %>%
plot_ly(x=~x, y=~y) %>%
# add_lines(frame=~var_name)
add_lines(frame=~var_name,
text = ~paste(var_name),
hoverinfo = "text"
) %>%
layout(title="分布")
# add_lines(color=~status) %>%
# storms %>%
## ---- warning=FALSE--------------------------------
jc_shapiro <- function(x) {
shapiro.test(x) %>% broom::tidy() %>% select(p.value) %>% round(3)
}
d_common_normality_test<-d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% purrr::map_df(jc_shapiro)
rownames(d_common_normality_test)<-d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% colnames()
DT::datatable(d_common_normality_test)
## --------------------------------------------------
d_common_normality_test %>% filter(p.value<0.05) %>% DT::datatable()
## --------------------------------------------------
library(plotly)
temp<-left_join(d_common_standarize_long, d_common,
by = c("pref.id"="key")) %>% select(pref.J, 2,3)
temp %>% filter(pref.J=="和歌山"|
pref.J=="青森"|
pref.J=="滋賀"|
pref.J=="長野") %>%
plot_ly(y =  ~ pref.J,
x =  ~ value,
color =  ~ pref.J) %>%
add_bars(frame=~var_name,
hoverinfo="text",
text=~paste(var_name))
d_common_normality_test %>% filter(p.value<0.05)
d_common_normality_test %>% filter(p.value<0.05) %>% DT::datatable()
ls()
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>% DT::datatable()
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>% DT::datatable()
var
var$var_name_Jpn
var$var_name_Jpn %>% cat()
d_common
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame()
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>% left_join(c(key=var_name_Eng))
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
left_join(c("key"="var_name_Eng"))
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
left_join(var, c("key"="var_name_Eng"))
## --------------------------------------------------
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
left_join(var, c("key"=="var_name_Eng"))
## --------------------------------------------------
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
left_join(var, c("key"="var_name_Eng"))
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
left_join(var, by=c("key"="var_name_Eng"))
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30)
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame()
var
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
left_join(var, c("var"="var_name_Jpn"))
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
left_join(var, c("key"="var_name_Jpn"))
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
left_join(var, by=c("key"="var_name_Jpn"))
d_common
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame()
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% tbl_df()
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
tbl_df()
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
tbl_df() %>% rownames_to_column()
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame()
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column()
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df()
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Jpn"))
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Jpn"))
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Jpn"))
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng"))
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
select(var_name_Jpn, everything())
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
select(var_name_Jpn, V1, everything())
## 和歌山県順位 with common data--------------------------------------------------
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1)
## 和歌山県順位 with common data--------------------------------------------------
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>% mutate(rank=V1)
## 和歌山県順位 with common data--------------------------------------------------
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>%
mutate(rank=V1) %>%mutate(drop(rank))
## 和歌山県順位 with common data--------------------------------------------------
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>%
mutate(rank=V1) %>%select(-V1)
## 和歌山県順位 with common data--------------------------------------------------
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>%
mutate(rank=V1) %>%select(-V1) %>% filter(rank<10)
## 和歌山県順位 with common data--------------------------------------------------
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>%
mutate(rank=V1) %>%select(-V1) %>% filter(rank<5)
## 和歌山県順位 with common data--------------------------------------------------
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>%
mutate(rank=V1) %>%select(-V1) %>% filter(rank<5 | rank>42)
d_f %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>%
mutate(rank=V1) %>%select(-V1) %>% filter(rank<5 | rank>42)
## 和歌山県順位 with d_m data--------------------------------------------------
d_m %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>%
mutate(rank=V1) %>%select(-V1) %>% filter(rank<5 | rank>42)
d_common
d_common %>% colnames() %>% enframe()
d_m %>% select(LE_2015) %>% bind_cols(Wakayama::pref["pref.J"]) %>% dplyr::arrange(LE_2015) %>% mutate(rank=row_number()) %>%DT::datatable()
d_common_standarize<-
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% scale() %>% tbl_df()
d_common_standarize<-bind_cols(d_common["pref.id"], d_common_standarize)
d_common_standarize
d_common_standarize
d_common_standarize
d_common_standarize<-
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% scale() %>% tbl_df()
d_common %>% select_if(is.numeric())
d_common %>% select_if(is.numeric
d_common %>% select_if(is.numeric)
d_common %>% select_if(is.numeric)
d_common %>% sapply(., typeof())
d_common %>% sapply(., typeof)
d_common %>% map(typeof)
d_common %>% map_df(typeof)
source('~/Dropbox/00000健康和歌山県/0 wakayamaPkg/R/R3ProjRcode.R', echo=TRUE)
d_common %>% map_df(typeof) %>% t()
d_common %>% map_df(typeof) %>% t()
d_m %>% map_df(typeof) %>% t()
d_f %>% map_df(typeof) %>% t()
d_common_standarize<-
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% scale() %>% tbl_df()
d_common_standarize
d_common_standarize<-
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% scale() %>% tbl_df()
d_common_standarize<-bind_cols(d_common["pref.id"], d_common_standarize)
d_common_standarize
d_common %>% select(contains("LE"))
d_common %>% colnames() %>% cat
d_f$LE_2015
lm(LE_2015~. d_f)
lm(LE_2015~., data = d_f)
d_f
d_f$LE_2015~d_f$Mortality_Malignant_Neoplasm_2018_Under_75
)
d_f$LE_2015~d_f$Mortality_Malignant_Neoplasm_2018_Under_75
)
lm(d_f$LE_2015~d_f$Mortality_Malignant_Neoplasm_2018_Under_75)
lm(d_f$LE_2015~d_f$Mortality_Malignant_Neoplasm_2018_Under_75) %>% summary()
model1 = glm(LE_2015 ~ ., data = d_f)
d_f
d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J)
d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J) %>%
glm(LE_2015 ~ ., data = .)
d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J) %>%
d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J)
d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J)
aa=d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J)
glm(LE_2015 ~ ., data = aa[, 1:30])
glm(LE_2015 ~ ., data = aa[, 1:20])
aa[, 1:20]
glm(Under_75_Adjusted_Mortality_Evil_Neoplasms_2019 ~sex , aa)
glm(Under_75_Adjusted_Mortality_Evil_Neoplasms_2019 ~sex , aa,
family = identity()))
glm(Under_75_Adjusted_Mortality_Evil_Neoplasms_2019 ~sex , aa,
family = identity()
)
glm(Under_75_Adjusted_Mortality_Evil_Neoplasms_2019 ~sex , aa,
family = identity
)
glm(Under_75_Adjusted_Mortality_Evil_Neoplasms_2019 ~sex ,
data=aa,
family = identity
)
glm(Under_75_Adjusted_Mortality_Evil_Neoplasms_2019 ~sex ,
data=aa,
family =gaussian(link = "identity"))
glm(Under_75_Adjusted_Mortality_Evil_Neoplasms_2019 ~factor(sex) ,
data=aa,
family =gaussian(link = "identity"))
factor(sex)
glm(Under_75_Adjusted_Mortality_Evil_Neoplasms_2019 ~as.factor(sex) ,
data=aa,
family =gaussian(link = "identity"))
d_common_standarize
d_common_standarize
d_f
d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J)
d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J) %>% select(1:3)
aa=d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J) %>% select(1:3)
aa
lm(pop~., data=aa)
glm(pop~., data=aa)
glm(iris$Sepal.Length~. , data = iris)
iris
iris$Species
aa$pop
glm(pop~., data=aa)
aa
glm(pop~Mortality_Malignant_Neoplasm_2018_Under_75, data=aa)
aa$sex
aa$sex %>% as.factor()
d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex)
d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex)
glm(LE_2015~.)
d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex)
glm(LE_2015~., data=.)
aa=d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex)
glm(LE_2015~., data=aa)
bbb=glm(LE_2015~., data=aa)
step(bbb,direction = "forward")
step(bbb,direction = "forward") %>% broom::tidy
step(bbb,direction = "forward") %>% broom::tidy()
aa
aa %>% colnames()
aa=d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex, -pop)
aa
aa=d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex, -pop) %>%
select(LE_2015 HLE_2016)
aa
aa=d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex, -pop)
aa=d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex, -pop) %>%
select(LE_2015 HLE_2016)
aa=d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex, -pop) %>%
select(LE_2015,HLE_2016)
aa
aa=d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex, -pop) %>%
select(LE_2015,HLE_2016, everything())
aa
aa=d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex, -pop) %>%
select(LE_2015,-HLE_2016, everything())
bbb=glm(LE_2015~., data=aa[,1:30])
bbb
step(bbb, direction = "forward")
step(bbb, direction = "bacward")
step(bbb, direction = "backward")
step(bbb, direction = "backward")
cc=step(bbb, direction = "backward")
cc %>% broom::tidy()
aa=d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex, -pop) %>%
select(LE_2015,-HLE_2016, everything())
bbb=glm(LE_2015~., data=aa[,1:30])
cc=step(bbb, direction = "backward")
cc %>% broom::tidy()
aa=d_f %>% select(-key, -pref.id,  -pref.E, -pref.A, -pref.J, -sex, -pop) %>%
select(LE_2015,everything()) %>% select(-HLE_2016)
bbb=glm(LE_2015~., data=aa[,1:30])
cc=step(bbb, direction = "backward")
cc %>% broom::tidy()
