rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>%
mutate(rank=V1) %>%select(-V1) %>% filter(rank<5 | rank>42)
## 和歌山県順位 with d_m data--------------------------------------------------
d_m %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>%
mutate(rank=V1) %>%select(-V1) %>% filter(rank<5 | rank>42)
# ----------------- ----------------- ----------------- -----------------
# ____  _                  _               _ _          _   _
# / ___|| |_ __ _ _ __   __| | __ _ _ __ __| (_)______ _| |_(_) ___  _ __
# \___ \| __/ _` | '_ \ / _` |/ _` | '__/ _` | |_  / _` | __| |/ _ \| '_ \
#  ___) | || (_| | | | | (_| | (_| | | | (_| | |/ / (_| | |_| | (_) | | | |
# |____/ \__\__,_|_| |_|\__,_|\__,_|_|  \__,_|_/___\__,_|\__|_|\___/|_| |_|
#
# ----------------- ----------------- ----------------- -----------------
## d_common 標準化--------------------------------------------------
# d_common_standarize
d_common %>% map_df(typeof) %>% t()
d_m %>% map_df(typeof) %>% t()
d_f %>% map_df(typeof) %>% t()
d_common_standarize<-
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% scale() %>% tbl_df()
d_common_standarize<-bind_cols(d_common["pref.id"], d_common_standarize)
# ----------------- ----------------- ----------------- -----------------
# ____                              _
# |  _ \ ___  __ _ _ __ ___  ___ ___(_) ___  _ __
# | |_) / _ \/ _` | '__/ _ \/ __/ __| |/ _ \| '_ \
# |  _ <  __/ (_| | | |  __/\__ \__ \ | (_) | | | |
# |_| \_\___|\__, |_|  \___||___/___/_|\___/|_| |_|
#            |___/
# ----------------- ----------------- ----------------- -----------------
#
# d_f data 変数選択　and regression
# 使用package
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(data.table))
suppressMessages(library(kableExtra))
suppressMessages(library(curl))
suppressMessages(library(tidyverse))
suppressMessages(library(plotly))
d_m %>% dim()
d_f %>% dim()
d_m %>% select(constains("HL"))
d_f %>% dim()
suppressMessages(library(tidyverse))
d_m %>% select(contains("HL"))
d_m %>% select(contains("LE"))
colnames(d_m)
d_m %>% select(-1:6)
d_m %>% select(-1:-6)
d_m %>% select(-1:-6) %>% select(HLE_2016, LE_2015, everything())
d_m %>% select(-1:-6) %>% select(LE_2015, HLE_2016, everything())
d_f %>% select(-1:-6) %>% select(LE_2015, HLE_2016, everything())
LE_d_m <-  d_m %>% select(-1:-6) %>% select(LE_2015,-HLE_2016, everything())
HLE_d_m <-  d_m %>% select(-1:-6) %>% select(-LE_2015, HLE_2016, everything())
LE_d_f <-  d_f %>% select(-1:-6) %>% select(LE_2015,-HLE_2016, everything())
HLE_d_f <-  d_f %>% select(-1:-6) %>% select(-LE_2015, HLE_2016, everything())
LE_d_m
HLE_d_m
LE_d_m <-  d_m %>% select(-1:-6) %>% select(LE_2015,-HLE_2016, everything())
HLE_d_m <-  d_m %>% select(-1:-6) %>% select(HLE_2016, -LE_2015,  everything())
LE_d_f <-  d_f %>% select(-1:-6) %>% select(LE_2015,-HLE_2016, everything())
HLE_d_f <-  d_f %>% select(-1:-6) %>% select(HLE_2016,-LE_2015,  everything())
LE_d_m
LE_d_m %>% colnames(
LE_d_m %>% colnames()
)
LE_d_m %>% colnames()
LE_d_m %>% colnames() %>% head()
LE_d_m %>% colnames() %>% head()
HLE_d_m %>% colnames() %>% head()
LE_d_f %>% colnames() %>% head()
HLE_d_f %>% colnames() %>% head()
LE_d_m %>% colnames() %>% head()
HLE_d_m %>% colnames() %>% head()
LE_d_f %>% colnames() %>% head()
HLE_d_f %>% colnames() %>% head()
LE_d_m %>% colnames() %>% head()
HLE_d_f %>% dim()
eval(parse("HLE_d_f"))
eval("HLE_d_f")
eval(parse(paste("HLE_d_f")))
eval(parse(paste0("HLE_d_f")))
eval(parse(text = paste0("HLE_d_f")))
eval(parse(text = "HLE_d_f"))
HLE_d_f %>% select(1,33:64)
HLE_d_f %>% select(1,2:32)
paste0("HLE_d_f", "1") <- HLE_d_f %>% select(1,2:32)
paste0("HLE_d_f", "1")
paste0("HLE_d_f", "_1")
eval(parse(text =paste0("HLE_d_f", "_1") ))
<- HLE_d_f %>% select(1,2:32)
eval(parse(text =paste0("HLE_d_f", "_1")))<- HLE_d_f %>% select(1,2:32)
HLE_d_f %>% select(1,2:32)
"a"<- HLE_d_f %>% select(1,2:32)
a
paste0("HLE_d_f", "_1")<- HLE_d_f %>% select(1,2:32)
paste0("HLE_d_f", "_1")
assign("a", 1)
a
assign(paste0("HLE_d_f", "_1"), HLE_d_f %>% select(1,2:32))
HLE_d_f_1
assign(paste0("HLE_d_f", "_1"), HLE_d_f %>% select(1,2:32))
assign(paste0("HLE_d_f", "_2"), HLE_d_f %>% select(1,33:64))
HLE_d_f_2
lm(HLE_d_f_2$HLE_2016~., data=HLE_d_f_2)
lm(HLE_2016~., data=HLE_d_f_1)
lm(HLE_2016~., data=HLE_d_f_1) %>% broom::tidy()
lm(HLE_2016~., data=HLE_d_f_1) %>% step(.)
lm(HLE_2016~., data=HLE_d_f_1) %>% step(.) %>% tidy()
lm(HLE_2016~., data=HLE_d_f_1) %>% step(.) %>% broom::tidy()
lm(HLE_2016~., data=HLE_d_f_1) %>% step(.) %>% broom::tidy()
assign(paste0("HLE_d_f", "_1"), HLE_d_f %>% select(1,2:32))
eval(parse(text = "HLE_d_f")%>% select(1,2:32))
eval(parse(text = "HLE_d_f")
eval(parse(text = "HLE_d_f"))
eval(parse(text = "HLE_d_f"))
eval(parse(text = "HLE_d_f"))%>% select(1,2:32))
eval(parse(text = "HLE_d_f"))%>% select(1,2:32)
name("HLE_d_m)
name <- function(aa) {
assign(paste0(aa, "_1"), eval(parse(text = aa))%>% select(1,2:32))
assign(paste0(aa, "_2"), eval(parse(text = aa))%>% select(1,2:32))
}
name("HLE_d_m")
name("HLE_d_m")
name <- function(aa) {
assign(paste0(aa, "_1"), eval(parse(text = aa))%>% select(1,2:32))
assign(paste0(aa, "_2"), eval(parse(text = aa))%>% select(1,2:32))
return(assign(paste0(aa, "_2"))
}
assign(paste0(aa, "_2"), eval(parse(text = aa))%>% select(1,2:32))
name <- function(aa) {
assign(paste0(aa, "_1"), eval(parse(text = aa))%>% select(1,2:32))
assign(paste0(aa, "_2"), eval(parse(text = aa))%>% select(1,2:32))
return(assign(paste0(aa, "_2")))
}
name("HLE_d_m")
name <- function(aa) {
assign(paste0(aa, "_1"), eval(parse(text = aa))%>% select(1,2:32))
assign(paste0(aa, "_2"), eval(parse(text = aa))%>% select(1,2:32))
}
name("HLE_d_m")
aa="HLE_d_m"
assign(paste0(aa, "_1"), eval(parse(text = aa))%>% select(1,2:32))
assign(paste0(aa, "_2"), eval(parse(text = aa))%>% select(1,2:32))
name <- function(aa) {
assign(paste0(aa, "_1"), eval(parse(text = aa))%>% select(1,2:32))
assign(paste0(aa, "_2"), eval(parse(text = aa))%>% select(1,33:64))
}
name("HLE_d_f")
View(HLE_d_f_1)
for (i in c("LE_d_m", "HLE_d_m", "LE_d_f", "HLE_d_f") {
assign(paste0(i, "_1"), eval(parse(text = i)) %>% select(1, 2:32))
assign(paste0(i, "_2"), eval(parse(text = i)) %>% select(1, 2:32))
}
for (i in c("LE_d_m", "HLE_d_m", "LE_d_f", "HLE_d_f")) {
assign(paste0(i, "_1"), eval(parse(text = i)) %>% select(1, 2:32))
assign(paste0(i, "_2"), eval(parse(text = i)) %>% select(1, 2:32))
}
rm(LE_d_m_1,HLE_d_m_1,LE_d_f_1,HLE_d_f_1,LE_d_m_2,HLE_d_m_2,LE_d_f_2,HLE_d_f_2,)
rm(LE_d_m_1,HLE_d_m_1,LE_d_f_1,HLE_d_f_1,LE_d_m_2,HLE_d_m_2,LE_d_f_2,HLE_d_f_2)
rm(LE_d_m_1,HLE_d_m_1,LE_d_f_1,HLE_d_f_1,LE_d_m_2,HLE_d_m_2,LE_d_f_2,HLE_d_f_2)
rm(LE_d_m_1,HLE_d_m_1,LE_d_f_1,HLE_d_f_1,LE_d_m_2,HLE_d_m_2,LE_d_f_2,HLE_d_f_2)
for (i in c("LE_d_m", "HLE_d_m", "LE_d_f", "HLE_d_f")) {
assign(paste0(i, "_1"), eval(parse(text = i)) %>% select(1, 2:32))
assign(paste0(i, "_2"), eval(parse(text = i)) %>% select(1, 33:64))
}
rm(LE_d_m_1,HLE_d_m_1,LE_d_f_1,HLE_d_f_1,LE_d_m_2,HLE_d_m_2,LE_d_f_2,HLE_d_f_2)
for (i in c("LE_d_m", "HLE_d_m", "LE_d_f", "HLE_d_f")) {
assign(paste0(i, "_1"), eval(parse(text = i)) %>% select(1, 2:32))
assign(paste0(i, "_2"), eval(parse(text = i)) %>% select(1, 33:64))
}
common
d_common %>% colnames()
system("open .")
# rm(LE_d_m_1,HLE_d_m_1,LE_d_f_1,HLE_d_f_1,LE_d_m_2,HLE_d_m_2,LE_d_f_2,HLE_d_f_2)
#  _____           _
# |_   _|__     __| | ___
#   | |/ _ \   / _` |/ _ \
#   | | (_) | | (_| | (_) |  _ _
#   |_|\___/   \__,_|\___/  (_|_)
#
## ---- warning=FALSE--------------------------------
jc_shapiro <- function(x) {
shapiro.test(x) %>% broom::tidy() %>% select(p.value) %>% round(3)
}
d_common_normality_test<-d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
## ---- warning=FALSE--------------------------------
jc_shapiro <- function(x) {
shapiro.test(x) %>% broom::tidy() %>% select(p.value) %>% round(3)
}
d_common_normality_test<-d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% purrr::map_df(jc_shapiro)
rownames(d_common_normality_test)<-d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% colnames()
DT::datatable(d_common_normality_test)
## --------------------------------------------------
d_common_normality_test %>% filter(p.value<0.05) %>% DT::datatable()
d_common_standarize_long<-
d_common_standarize %>% dplyr::select_if(is.numeric) %>%
pivot_longer(
cols = -pref.id,
names_to ="var_name" ,
values_to ="value"
)
plot_ly(
x =d_common_standarize_long$value,
type = "histogram",
name = "Histogram",
frame =  ~d_common_standarize_long$var_name
)
## --------------------------------------------------
name1 <- function(temp) {
temp %>% select(value) %>% .[[1]] %>% density() %>%
broom::tidy()
}
d_common_standarize_long_density<-
d_common_standarize_long %>% group_by(var_name) %>% nest() %>% mutate(dens=map(data, name1)) %>% select(var_name, dens) %>% unnest()
d_common_standarize_long_density %>% DT::datatable()
d_common_standarize_long_density %>%
plot_ly(x=~x, y=~y) %>%
# add_lines(frame=~var_name)
add_lines(frame=~var_name,
text = ~paste(var_name),
hoverinfo = "text"
) %>%
layout(title="分布")
# add_lines(color=~status) %>%
# storms %>%
## --------------------------------------------------
library(plotly)
temp<-left_join(d_common_standarize_long, d_common,
by = c("pref.id"="key")) %>% select(pref.J, 2,3)
temp %>% filter(pref.J=="和歌山"|
pref.J=="青森"|
pref.J=="滋賀"|
pref.J=="長野") %>%
plot_ly(y =  ~ pref.J,
x =  ~ value,
color =  ~ pref.J) %>%
add_bars(frame=~var_name,
hoverinfo="text",
text=~paste(var_name))
ls()
# devtools::install_github(repo = "luka3117/JcPackage/OsakaUniv2020")
# 使用package
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(data.table))
suppressMessages(library(kableExtra))
suppressMessages(library(curl))
suppressMessages(library(tidyverse))
suppressMessages(library(plotly))
suppressMessages(library(ggrepel))
## ---- load data d -----------------
# ____        _          _                            _
# |  _ \  __ _| |_ __ _  (_)_ __ ___  _ __   ___  _ __| |_
# | | | |/ _` | __/ _` | | | '_ ` _ \| '_ \ / _ \| '__| __|
# | |_| | (_| | || (_| | | | | | | | | |_) | (_) | |  | |_
# |____/ \__,_|\__\__,_| |_|_| |_| |_| .__/ \___/|_|   \__|
#                                    |_|
## ---- load data d -----------------
file="https://raw.githubusercontent.com/luka3117/ClassData/master/Wakayama/DataFormat.csv"
d<-read_csv(url(file))
d<-d[-95,]
d %>% dim()
## ---- load data variable name : JpnEng.csv to var -----------------
## ---- change variable name  to Eng -----------------
varFile<-
"https://raw.githubusercontent.com/luka3117/ClassData/master/Wakayama/JpnEng.csv"
var<-read_csv(url(varFile))
# var<-read.csv("/Users/jlee/Dropbox/00000健康和歌山県/0 wakayamaPkg/ClassData/Wakayama/JpnEng.csv")
colnames(d)<-var$var_name_Eng
# d %>% DT::datatable()
## 和英対応、出典など
var
## d_common data --------------------------------------------------
d_common<-d[, sapply(d[48,], is.na)]
d_common<-d_common[1:47, ]
d_common<-d %>% select(1:6) %>% .[1:47,] %>% bind_cols(d_common)
d_common %>% dim()
d_common %>% colnames()
d_common
## 男女分ける開始--------------------------------------------------
name <- function(x) {
!is.na(x)
}
d_mf<-d[, sapply(d[48,], name)]
d_mf %>% dim()
d_m<-d_mf %>% filter(sex=="M")
d_f<-d_mf %>% filter(sex=="F")
## --------------------------------------------------
d_m
## --------------------------------------------------
d_f
## --------------------------------------------------
d_common %>% colnames() %>% enframe()
# ----------------- ----------------- ----------------- -----------------
#      _       _          _                            _                    _
#    _| | __ _| |_ __ _  (_)_ __ ___  _ __   ___  _ __| |_    ___ _ __   __| |
#  / _` |/ _` | __/ _` | | | '_ ` _ \| '_ \ / _ \| '__| __|  / _ \ '_ \ / _` |
# | (_| | (_| | || (_| | | | | | | | | |_) | (_) | |  | |_  |  __/ | | | (_| |
#  \__,_|\__,_|\__\__,_| |_|_| |_| |_| .__/ \___/|_|   \__|  \___|_| |_|\__,_|
#                                    |_|
# ----------------- ----------------- ----------------- -----------------
# ----------------- ----------------- ----------------- -----------------
# ____             _
# |  _ \ __ _ _ __ | | __
# | |_) / _` | '_ \| |/ /
# |  _ < (_| | | | |   <
# |_| \_\__,_|_| |_|_|\_\
# ----------------- ----------------- ----------------- -----------------
## 和歌山県順位 with common data--------------------------------------------------
d_common %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>%
mutate(rank=V1) %>%select(-V1) %>% filter(rank<5 | rank>42)
## 和歌山県順位 with d_f data--------------------------------------------------
d_f %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>%
mutate(rank=V1) %>%select(-V1) %>% filter(rank<5 | rank>42)
## 和歌山県順位 with d_m data--------------------------------------------------
d_m %>% dplyr::select_if(is.numeric) %>% sapply(rank) %>%
tbl_df() %>%dplyr::filter(key==30) %>% t() %>% as.data.frame() %>%
rownames_to_column() %>% tbl_df() %>%
left_join(var, by=c("rowname"="var_name_Eng")) %>%
# select(var_name_Jpn, V1, everything())
select(var_name_Jpn, V1) %>%
mutate(rank=V1) %>%select(-V1) %>% filter(rank<5 | rank>42)
# ----------------- ----------------- ----------------- -----------------
# ____  _                  _               _ _          _   _
# / ___|| |_ __ _ _ __   __| | __ _ _ __ __| (_)______ _| |_(_) ___  _ __
# \___ \| __/ _` | '_ \ / _` |/ _` | '__/ _` | |_  / _` | __| |/ _ \| '_ \
#  ___) | || (_| | | | | (_| | (_| | | | (_| | |/ / (_| | |_| | (_) | | | |
# |____/ \__\__,_|_| |_|\__,_|\__,_|_|  \__,_|_/___\__,_|\__|_|\___/|_| |_|
#
# ----------------- ----------------- ----------------- -----------------
## d_common 標準化--------------------------------------------------
# d_common_standarize
d_common %>% map_df(typeof) %>% t()
d_m %>% map_df(typeof) %>% t()
d_f %>% map_df(typeof) %>% t()
d_common_standarize<-
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% scale() %>% tbl_df()
d_common_standarize<-bind_cols(d_common["pref.id"], d_common_standarize)
# ----------------- ----------------- ----------------- -----------------
# ____                              _
# |  _ \ ___  __ _ _ __ ___  ___ ___(_) ___  _ __
# | |_) / _ \/ _` | '__/ _ \/ __/ __| |/ _ \| '_ \
# |  _ <  __/ (_| | | |  __/\__ \__ \ | (_) | | | |
# |_| \_\___|\__, |_|  \___||___/___/_|\___/|_| |_|
#            |___/
# ----------------- ----------------- ----------------- -----------------
#
# d_f data 変数選択　and regression
# 変数選択のためのデータ分割
# LE_d_m_1,HLE_d_m_1,LE_d_f_1,HLE_d_f_1,LE_d_m_2,HLE_d_m_2,LE_d_f_2,HLE_d_f_2
# の8のデータセット生成
LE_d_m <-  d_m %>% select(-1:-6) %>% select(LE_2015,-HLE_2016, everything())
HLE_d_m <-  d_m %>% select(-1:-6) %>% select(HLE_2016, -LE_2015,  everything())
LE_d_f <-  d_f %>% select(-1:-6) %>% select(LE_2015,-HLE_2016, everything())
HLE_d_f <-  d_f %>% select(-1:-6) %>% select(HLE_2016,-LE_2015,  everything())
for (i in c("LE_d_m", "HLE_d_m", "LE_d_f", "HLE_d_f")) {
assign(paste0(i, "_1"), eval(parse(text = i)) %>% select(1, 2:32))
assign(paste0(i, "_2"), eval(parse(text = i)) %>% select(1, 33:64))
}
LE_d_m <-  d_m %>% select(-1:-6) %>% select(LE_2015,-HLE_2016, everything())
d_m$LE_2015 %>% bind_cols(d_common)
d_m$LE_2015
d_m$"LE_2015"
d_m["LE_2015"]
d_m["LE_2015"] %>% bind_cols(d_common)
d_common %>% select(-1:-6)
d_common %>% select(-1:-6) %>% bind_cols(d_m["LE_2015"])
d_common %>% select(-1:-6) %>% bind_cols(d_m["LE_2015"]) %>%
select(LE_2015, everything())
d_common %>% select(-1:-6) %>% bind_cols(d_m["LE_2015"]) %>%
select(LE_2015, everything())
LE_d_common_m<-d_common %>% select(-1:-6) %>% bind_cols(d_m["LE_2015"]) %>% select(LE_2015, everything())
HLE_d_common_m<-d_common %>% select(-1:-6) %>% bind_cols(d_m["HLE_2016"]) %>% select(HLE_2016, everything())
LE_d_common_f<-d_common %>% select(-1:-6) %>% bind_cols(d_f["LE_2015"]) %>% select(LE_2015, everything())
HLE_d_common_f<-d_common %>% select(-1:-6) %>% bind_cols(d_f["HLE_2016"]) %>% select(HLE_2016, everything())
LE_d_common_f %>% dim()
for (i in c("LE_d_common_m", "HLE_d_common_m", "LE_d_common_f", "HLE_d_common_f")) {
assign(paste0(i, "_1"), eval(parse(text = i)) %>% select(1, 2:33))
assign(paste0(i, "_2"), eval(parse(text = i)) %>% select(1, 34:66))
assign(paste0(i, "_3"), eval(parse(text = i)) %>% select(1, 67:99))
}
View(HLE_d_common_f_1)
ls()
ls() %>% cat()
lm(LE_2015~. , data = LE_d_common_f_1)
lm(LE_2015~. , data = LE_d_common_f_1) %>% step()
lm(LE_2015~. , data = LE_d_common_f_1) %>% step() %>% broom::tidy()
lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy()
lm(LE_2015~. , data = LE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy()
lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term)
lm(LE_2015~. , data = LE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term)
lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term)
lm(LE_2015~. , data = LE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term)
lm(LE_2015~. , data = LE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term)
lm(LE_2015~. , data = LE_d_common_m_1) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term)
lm(LE_2015~. , data = LE_d_common_m_2) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term)
lm(LE_2015~. , data = LE_d_common_m_3) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term)
lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term) %>% c()
%>% c()
lm(LE_2015~. , data = LE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_m_3) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_m_3) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% select(term)
lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy()
lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy()
lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05)
lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05)
lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.05) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
lm(HLE_2016~. , data = HLE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
temp1<-lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
temp2<-lm(LE_2015~. , data = LE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
temp3<-lm(LE_2015~. , data = LE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
temp4<-lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
temp5<-lm(HLE_2016~. , data = HLE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
temp6<-lm(HLE_2016~. , data = HLE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
temp1
rbind(temp1, temp2)
c(temp1, temp2)
lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% c()
lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term) %>% as.vector()
lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
temp1<-lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
temp2<-lm(LE_2015~. , data = LE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
temp3<-lm(LE_2015~. , data = LE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
temp4<-lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
temp5<-lm(HLE_2016~. , data = HLE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
temp6<-lm(HLE_2016~. , data = HLE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
bind_rows(temp1, temp2)
temp1
t1<-lm(LE_2015~. , data = LE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
t2<-lm(LE_2015~. , data = LE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
t3<-lm(LE_2015~. , data = LE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
t4<-lm(HLE_2016~. , data = HLE_d_common_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
t5<-lm(HLE_2016~. , data = HLE_d_common_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
t6<-lm(HLE_2016~. , data = HLE_d_common_f_3) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
bind_rows(t1,t2,t3,t4,t5,t6)
bind_rows(t1,t2,t3,t4,t5,t6) %>% unique()
bind_rows(t1,t2,t3,t4,t5,t6) %>% unique() %>% cat()
bind_rows(t1,t2,t3,t4,t5,t6) %>% unique() %>% .$term
bind_rows(t1,t2,t3,t4,t5,t6) %>% unique() %>% .$term %>% cat()
bind_rows(t7,t8,t9,t10) %>% unique() %>% .$term %>% cat()
t7<-lm(LE_2015~. , data = LE_d_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
t8<-lm(LE_2015~. , data = LE_d_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
t9<-lm(HLE_2016~. , data = HLE_d_f_1) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
t10<-lm(HLE_2016~. , data = HLE_d_f_2) %>% MASS::stepAIC() %>% broom::tidy() %>% filter(p.value<.01) %>% select(term)
bind_rows(t7,t8,t9,t10) %>% unique() %>% .$term %>% cat()
d_m %>% select(Under_75_Adjusted_Mortality_Evil_Neoplasms_2019)
d_m %>% select(`Self_development_languages_other_than_English`)
d_m %>% select(`Self_development_languages_other_than_English`)
d_m %>% select(Use_Insulin_binary_2014)
d_m %>% select("Self_development_languages_other_than_English")
d_m %>% select(contains("self")) %>% colnames()
bind_rows(t1,t2,t3,t4,t5,t6) %>% unique() %>% .$term
bind_rows(t1,t2,t3,t4,t5,t6) %>% unique() %>% .$term %>% c()
