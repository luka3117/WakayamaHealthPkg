plot_ly(
x =d_common_standarize_long$value,
type = "histogram",
name = "Histogram",
frame =  ~d_common_standarize_long$var_name
)
system("open .")
system("open .")
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% scale() %>% tbl_df()
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df()
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% mapply(shapiro.test)
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% mapply(~shapiro.test)
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% purrr::map(shapiro.test)
iris$Sepal.Length %>% shapiro.test()
iris$Sepal.Length %>% shapiro.test() %>% broom::tidy()
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% purrr::map_dbl(shapiro.test)
jc_shapiro <- function(x) {
shapiro.test(x) %>% broom::tidy()
}
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% purrr::map_dbl(jc_shapiro)
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% purrr::map(jc_shapiro)
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% purrr::map(jc_shapiro) %>% tbl_df()
aaa<-d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% purrr::map(jc_shapiro) %>% tbl_df()
aaa %>% colnames()
aaa
aaa %>% DT::datatable()
aaa %>% t()
aaa %>% t() %>% [1]
aaa %>% t() %>% .[1]
aaa %>% t() %>% .[1:3]
aaa %>% t() %>% .[1:10]
aaa %>% t() %>% .[1:10] %>% names()
aaa<-d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% purrr::map(jc_shapiro)
aaa
aaa$Trt_rate_Hospitalization_Malignant_neoplasm_2017
x<-iris$Sepal.Length
shapiro.test(x) %>% broom::tidy()
shapiro.test(x) %>% broom::tidy() %>% select(p.value)
jc_shapiro <- function(x) {
shapiro.test(x) %>% broom::tidy() %>% select(p.value)
}
aaa<-d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% purrr::map(jc_shapiro)
aaa
aaa<-d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% purrr::map_df(jc_shapiro)
aaa
names(aaa)
rownames(aaa)
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id)
d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% colnames()
names(aaa)<-d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% colnames()
aaa
jc_shapiro <- function(x) {
shapiro.test(x) %>% broom::tidy() %>% select(p.value)
}
aaa<-d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>%
# scale() %>%
tbl_df() %>% purrr::map_df(jc_shapiro)
rownames(aaa)<-d_common %>% dplyr::select_if(is.numeric) %>%
select(-key, -pref.id) %>% colnames()
aaa
rownames(aaa)
DT::datatable()
DT::datatable(aaa)
iris %>% ggplot(aes(y = iris$Sepal.Width))+geom_line()
iris %>% ggplot(aes(y = Sepal.Width))+geom_line()
iris %>% ggplot(aes(x = Sepal.Width))+geom_line()
iris %>% ggplot(aes(x = Sepal.Width, y=iris$Petal.Length))+geom_line()
iris %>% rowid_to_column()
iris %>% rowid_to_column() %>% tbl_df()
iris %>% rowid_to_column() %>% tbl_df() %>% colnames()
ggplot(iris, aes(x=rowid, y=Sepal.Length))
ggplot(iris, aes(x=rowid, y=Sepal.Length))+
geom_line()
ggplot(iris, aes(x=rowid, y=Sepal.Length))+
geom_line()
iris %>% rowid_to_column() %>%
ggplot(aes(x=rowid, y=Sepal.Length))+
geom_line()
ls()
d_common_standarize_long
d_common_standarize_long %>% rowid_to_column() %>%
ggplot(aes(x=var_name, y=value))+
geom_line()
d_common_standarize_long %>% rowid_to_column() %>%
ggplot(aes(x=var_name, y=value, group=pref.id))+
geom_line()
d_common_standarize_long %>% rowid_to_column() %>%
ggplot(aes(x=var_name, y=value, group=pref.id, color = pref.id))+
geom_line()
d_common_standarize_long %>% rowid_to_column() %>%
ggplot(aes(x=var_name, y=value, group=pref.id,
color =as.factor(pref.id)))+
geom_line()
library(plotly)
dens <- with(diamonds, tapply(price, INDEX = cut, density))
df <- data.frame(
x = unlist(lapply(dens, "[[", "x")),
y = unlist(lapply(dens, "[[", "y")),
cut = rep(names(dens), each = length(dens[[1]]$x))
)
fig <- plot_ly(df, x = ~x, y = ~y, color = ~cut)
fig <- fig %>% add_lines()
fig
dens
unlist(lapply(dens, "[[", "x")),
unlist(lapply(dens, "[[", "x"))
dens
library(plotly)
storms %>%
count(year, status) %>%
plot_ly(y=~status, x =~n, color=~status) %>%
add_bars(frame=~year) %>%
layout(barmode="stack")
storms %>%
count(year, status)
storms %>%
count(year, status) %>% class()
ls()
storms %>%
count(year, status)
ls()
d_common_standarize_long
d_common_standarize_long %>%
plot_ly(y=~pref.id, x =~value, color=~status) %>%
add_bars()
d_common_standarize_long %>%
plot_ly(y=~pref.id, x =~value, color=~pref.id) %>%
add_bars()
storms %>%
count(year, status)
d_common_standarize_long %>%
plot_ly(y=~pref.id, x =~value, color=~pref.id) %>%
add_bars()
d_common_standarize_long
d_common
d_common$pref.J
d_common_standarize_long %>% add_column(d_common$pref.J)
d_common_standarize_long %>% left_join(d_common$pref.J, by=c(pref.id, pref.J))
d_common_standarize_long %>% left_join(d_common$pref.J,
by = c("pref.id"="pref.J"))
d_common
d_common_standarize_long %>% left_join(d_common$pref.J,
by = c("pref.id"))
d_common_standarize_long %>% left_join(d_common$pref.J,by = c("pref.id"="key"))
d_common_standarize_long
d_common_standarize_long
d_common$key
left_join(d_common_standarize_long, d_common,
by = c("pref.id"="key"))
left_join(d_common_standarize_long, d_common,
by = c("pref.id"="key")) %>% select(pref.J, everything())
left_join(d_common_standarize_long, d_common,
by = c("pref.id"="key")) %>% select(1,2,3,4)
left_join(d_common_standarize_long, d_common,
by = c("pref.id"="key")) %>% select(1,2,3,4)
left_join(d_common_standarize_long, d_common,
by = c("pref.id"="key")) %>% select(pref.J, 1,2,3,4)
left_join(d_common_standarize_long, d_common,
by = c("pref.id"="key")) %>% select(pref.J, 1,2,3)
left_join(d_common_standarize_long, d_common,
by = c("pref.id"="key")) %>% select(pref.J, 1,3)
left_join(d_common_standarize_long, d_common,
by = c("pref.id"="key")) %>% select(pref.J, 2,3)
temp<-left_join(d_common_standarize_long, d_common,
by = c("pref.id"="key")) %>% select(pref.J, 2,3)
temp %>%
plot_ly(y =  ~ pref.J,
x =  ~ value,
color =  ~ pref.J) %>%
add_bars()
temp %>%
plot_ly(y =  ~ pref.J,
x =  ~ value,
color =  ~ pref.J) %>%
add_bars(frame=~var_name)
temp %>%
plot_ly(y =  ~ pref.J,
x =  ~ value,
color =  ~ pref.J) %>%
add_bars(frame=~var_name)
temp %>%
plot_ly(y =  ~ pref.J,
x =  ~ value,
color =  ~ pref.J) %>%
add_bars(frame=~var_name)
temp
temp %>% filter(pref.J="和歌山")
temp %>% filter(pref.J=="和歌山")
temp %>% filter(pref.J=="和歌山"|
pref.J=="滋賀"|
pref.J=="青森"|
pref.J=="長野")
temp %>% filter(pref.J=="和歌山"|
pref.J=="滋賀"|
pref.J=="青森"|
pref.J=="長野") %>%
plot_ly(y =  ~ pref.J,
x =  ~ value,
color =  ~ pref.J) %>%
add_bars(frame=~var_name)
temp %>% filter(pref.J=="和歌山"|
pref.J=="青森"|
pref.J=="滋賀"|
pref.J=="長野") %>%
plot_ly(y =  ~ pref.J,
x =  ~ value,
color =  ~ pref.J) %>%
add_bars(frame=~var_name)
# devtools::install_github(repo = "luka3117/JcPackage/OsakaUniv2020")
# 使用package
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(data.table))
suppressMessages(library(kableExtra))
suppressMessages(library(curl))
suppressMessages(library(tidyverse))
getwd()
d<-read_csv("../..//data/DataFormat.csv", skip=1, locale = readr::locale(encoding = "CP932"))
d<-d[-95,]
d %>% dim()
d<-d %>% rename(key=X1)
d %>% DT::datatable()
var<-read.csv("../..//var_name_Eng.csv")
colnames(d)<-var$var_name_Eng
# d %>% DT::datatable()
read.csv("../../JpnEng.csv") %>% DT::datatable()
d_common<-d[, sapply(d[48,], is.na)]
d_common<-d_common[1:47, ]
# d_common%>% DT::datatable()
d_common<-d %>% select(1:6) %>% .[1:47,] %>% bind_cols(d_common)
d_common %>% DT::datatable()
d_common %>% dim()
d_common %>% colnames() %>%tbl_df() %>%  DT::datatable()
name <- function(x) {
!is.na(x)
}
d_mf<-d[, sapply(d[48,], name)]
d_mf %>% DT::datatable()
d_mf %>% dim()
d_m<-d_mf %>% filter(sex=="M")
d_f<-d_mf %>% filter(sex=="F")
# summary(d_mf)
d_m %>% DT::datatable()
d_f %>% DT::datatable()
d_common %>% colnames() %>% tidyr::enfrmae()
d_common %>% colnames() %>% tidyr::enfrmae
d_common %>% colnames() %>% enfrmae
d_common %>% colnames() %>% enfrmae()
d_common %>% colnames() %>% enframe()
system("open .")
system("open .")
# 使用package
suppressMessages(library(readxl))
suppressMessages(library(dplyr))
suppressMessages(library(data.table))
suppressMessages(library(kableExtra))
suppressMessages(library(curl))
suppressMessages(library(tidyverse))
iris$Sepal.Length %>% density()
aa<-iris$Sepal.Length %>% density()
aa$x
plot(x, y,  data=aa)
plot(aa$x = )
plot(aa$x , aa$y)
aa
aa %>% tbl_df()
aa %>% broom::tidy()
map(iris, mean())
purrr::map(iris, mean())
purrr::map(iris, mean)
purrr::map(iris[-5], density )
aa<-iris$Sepal.Length %>% density() %>% tbl_df()
iris$Sepal.Length %>% density() %>% tbl_df()
iris$Sepal.Length %>% density() %>% broom::tidy()
density(x) %>% broom::tidy()
name <- function(x) {
density(x) %>% broom::tidy()
}
purrr::map(iris[-5], name )
name(iris$Sepal.Length)
purrr::map(iris[-5], name )
purrr::map(iris[-5], ~name )
name <- function(x) {
density(x) %>% broom::tidy()
}
name <- function(x) {
density(x) %>% broom::tidy() %>% plot()
}
name(iris$Sepal.Length)
iris[[1]]
iris[[1]] %>% name()
iris[[2]] %>% name()
iris$Sepal.Length
name(iris$Sepal.Length)
name <- function(x) {
density(x) %>% broom::tidy()
}
name(iris$Sepal.Length)
iris[-5] %>% colnames()
iris[-5] %>% colnames() %>% enframe()
aa<-iris[-5] %>% colnames() %>% enframe()
aa$name[1]
aa$value[1]
iris[aa$value[1]]
iris[aa$value[1]] %>% name()
iris[aa$value[1]] %>% c() %>% name()
iris[aa$value[1]] %>% c()
iris[aa$value[1]] %>% as.vector() %>% name()
iris[aa$value[1]] %>% as.vector()
iris[aa$value[1]] %>% as.vector() %>% class
iris[aa$value[1]] %>% as.numeric() %>% class
iris[aa$value[1]] %>% as.numeric()
iris[aa$value[1]] %>% as_vector() %>% class
iris[aa$value[1]] %>% as_vector()
iris[aa$value[1]] %>% as_vector() %>% name()
iris[aa$value[1]] %>% purrr::as_vector() %>% name()
aa
iris[aa$value[1]] %>% purrr::as_vector() %>% name()
# df1 is a nested data frame
(df1 <- tibble(
g = c(1, 2, 3),
data = list(
tibble(x = 1, y = 2),
tibble(x = 4:5, y = 6:7),
tibble(x = 10)
)
))
df2 <- tribble(
~g, ~x, ~y,
1,  1,  2,
2,  4,  6,
2,  5,  7,
3, 10,  NA
)
df2
df2 %>% nest(data = c(x, y))
iris[-5]
iris[-5] %>% pivot_longer()
iris[-5]
iris[-5] %>%   pivot_longer(
# cols = -pref.id,
names_to ="var_name" ,
values_to ="value"
)
iris[-5] %>%   pivot_longer(
cols = everything(),
names_to ="var_name" ,
values_to ="value"
)
iris[-5] %>%   pivot_longer(
cols = everything()
# ,
# names_to ="var_name" ,
# values_to ="value"
)
iris[-5] %>%   pivot_longer(
cols = everything()
# ,
# names_to ="var_name" ,
# values_to ="value"
) %>% nest_by(name)
iris[-5] %>%   pivot_longer(
cols = everything()
# ,
# names_to ="var_name" ,
# values_to ="value"
) %>% nest_by(name) %>% mutate(purrr::map(data, name))
tt<-iris[-5] %>%   pivot_longer(
cols = everything()
# ,
# names_to ="var_name" ,
# values_to ="value"
) %>% nest_by(name)
tt$data
tt$data[[1]]
tt$data
tt$data[[1]] %>% density()
tt$data[[1]] %>% as_vector()density()
tt$data[[1]] %>% as_vector()%>% density()
tt<-iris[-5] %>%   pivot_longer(
cols = everything()
# ,
# names_to ="var_name" ,
# values_to ="value"
) %>% nest_by(name)
tt
unnest(tt)
iris$Sepal.Length
iris %>% select(1)
df<-iris %>% select(1)
name(df)
df %>% c()
df[[1]]
name <- function(x) {
x[[1]]
density(x) %>% broom::tidy()
}
name(df)
name <- function(x) {
x<-x[[1]]
density(x) %>% broom::tidy()
}
name(df)
tt
tt %>% mutate(aa=purrr::map(data, name))
name
df
df %>% tbl_df() %>% [[1]]
df %>% tbl_df() %>% .[[1]]
df %>% tbl_df() %>% .[[1]] %>% density()
df %>% tbl_df() %>% .[[1]] %>% density() %>% broom::tidy()
df
df %>% list
df %>% list %>% density()
df %>% list %>% .[[1]] %>% density()
df %>% list %>% .[1] %>% density()
df %>% list
df %>% .[[1]]
df %>% .[[1]] %>% density()
df %>% .[[1]] %>% density() %>% broom::tidy()
name1<- function(df) {
tt<-df %>% .[[1]] %>% density() %>% broom::tidy()
return(tt)
}
iris[-5]
iris[-5] %>% pivot_longer(cols = everything())
iris[-5] %>% pivot_longer(cols = everything()) %>% nest_by(name)
aa<-iris[-5] %>% pivot_longer(cols = everything()) %>% nest_by(name)
aa$data
aa %>% mutate(mean=map(data, mean))
aa %>% mutate(mean=map(data, name1))
aa %>% mutate(mean=map(data, name1))
df
df %>% name1
aa
aa<-iris[-5] %>% pivot_longer(cols = everything())
iris[-5] %>% pivot_longer(cols = everything())
iris[-5] %>% pivot_longer(cols = everything()) %>% group_by(name)
iris[-5] %>% pivot_longer(cols = everything())
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value)
iris[-5] %>% pivot_longer(cols = everything()) %>% nest_by(name)
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value)
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(map(data, name1))
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1))
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1)) %>% unnest()
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1))
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1)) %>% select(name, desn)
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1)) %>% dplyr::select(name, desn)
aa<-iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1))
aa<-iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1))
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1))
aa<-
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1))
aa
aa$name
aa$dens
aa %>% select(name, dens)
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1)) %>% select(name,dens)
iris[-5] %>% pivot_longer(cols = everything()) %>% nest(value) %>%
mutate(dens=map(data, name1)) %>% select(name,dens) %>% unnest()
